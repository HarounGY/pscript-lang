package FireballSpellModule	import TimerUtils	import OnCast	import LinkedListModule	import ExtensionFunctions	import MovingEffect	import LinkedListModule	import GroupUtils		public module FireballSpellModule		use OnPointCast		use TimedLoop		
		// speed of the missile		public function getSpeed() returns real			return 800.			
		// model of the missile		public function getMissileModel() returns string			return "Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdl"		
		// maximum flying distance		public function maxDist() returns real			return 1000.		
		// radius of the explosion
		public function radius() returns real
			return 200.
				static thistype tempThis				real pos_x		real pos_y		real velocity_x		real velocity_y		unit caster		int level		real targetX		real targetY		boolean finished = false		real dist
		MovingEffect movingEffect				override public function onTimedLoop() returns boolean			moveForward()			checkForCollisions()			return finished				public function moveForward()			pos_x += velocity_x * TimedLoop.PERIOD			pos_y += velocity_y * TimedLoop.PERIOD			dist  += getSpeed() * TimedLoop.PERIOD			if dist > maxDist()				finished = true					public function checkForCollisions()			tempThis = this			GroupEnumUnitsInRange(Groups.TEMP_GROUP, pos_x, pos_y, radius(), Condition(function filterFunc))				private static function filterFunc() returns boolean			tempThis.onCollision(GetFilterUnit())
			return false					public function onCollision(unit u)			KillUnit(u)			finished = true								abstract static public function create() returns thistype				override static public function onPointCast(unit caster, int level, real targetX, real targetY)				thistype m = create()				this.caster = caster				this.level = level				this.targetX = targetX				this.targetY = targetY				m.start()				public function start()				initStartPos()				initVelocity()				initMovingEffect()				startTimedLoop()				public function initStartPos()				pos_x = caster.getX()				pos_y = caster.getY()				public function initVelocity()				real distance_x = targetX - pos_x				real distance_y = targetY - pos_y 				real distance = SquareRoot(distance_x*distance_x + distance_y*distance_y)				if distance > 0.					velocity_x = getSpeed(level) * distance_x / distance					velocity_y = getSpeed(level) * distance_y / distance				else					velocity_x = getSpeed(level)					velocity_y = 0.				public function initMovingEffect()			movingEffect = new MovingEffect(pos_x, pos_y, Atan2(velocity_y, velocity_x))				.setFx(getMissileModel())			/*	init		FireballSpell.registerSpellEvent('A000')	*/	endpackage