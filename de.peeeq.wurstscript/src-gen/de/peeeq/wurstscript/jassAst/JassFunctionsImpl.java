//generated by parseq
package de.peeeq.wurstscript.jassAst;

class JassFunctionsImpl extends JassFunctions implements JassAstElementIntern {
 	private JassAstElement parent;
	public JassAstElement getParent() { return parent; }
	public void setParent(JassAstElement parent) {
		if (parent != null && this.parent != null) { 			throw new Error("Parent of " + this + " already set: " + this.parent + "\ntried to change to " + parent); 		}
		this.parent = parent;
	}

	protected void other_setParentToThis(JassFunction t) {
		((JassAstElementIntern) t).setParent(this);
	}
	protected void other_clearParent(JassFunction t) {
		((JassAstElementIntern) t).setParent(null);
	}
	@Override public void accept(JassFunctions.Visitor v) {
		for (JassFunction i : this ) {
			i.accept(v);
		}
		v.visit(this);
	}
	@Override public void accept(JassProg.Visitor v) {
		for (JassFunction i : this ) {
			i.accept(v);
		}
		v.visit(this);
	}
	@Override public String toString() {
		String result =  "JassFunctions(";
		boolean first = true;
		for (JassFunction i : this ) {
			if (!first) { result +=", "; }
			if (result.length() > 1000) { result +="..."; break; }
			result += i;
			first = false;
		}
		result +=  ")";
		return result;
	}
}
