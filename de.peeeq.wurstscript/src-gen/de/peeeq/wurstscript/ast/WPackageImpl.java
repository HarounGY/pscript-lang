//generated by parseq
package de.peeeq.wurstscript.ast;

class WPackageImpl implements WPackage, SortPosIntern {
	WPackageImpl(WPos source, String name, WImports imports, WEntities elements) {
		if (source == null) throw new IllegalArgumentException();
		((SortPosIntern)source).setParent(this);
		this.source = source;
		if (name == null) throw new IllegalArgumentException();
		this.name = name;
		if (imports == null) throw new IllegalArgumentException();
		((SortPosIntern)imports).setParent(this);
		this.imports = imports;
		if (elements == null) throw new IllegalArgumentException();
		((SortPosIntern)elements).setParent(this);
		this.elements = elements;
	}

	private SortPos parent;
	public SortPos getParent() { return parent; }
	public void setParent(SortPos parent) {
		if (parent != null && this.parent != null) { throw new Error("Parent already set."); }
		this.parent = parent;
	}

	private WPos source;
	public void setSource(WPos source) {
		if (source == null) throw new IllegalArgumentException();
		((SortPosIntern)this.source).setParent(null);
		((SortPosIntern)source).setParent(this);
		this.source = source;
	} 
	public WPos getSource() { return source; }

	private String name;
	public void setName(String name) {
		if (name == null) throw new IllegalArgumentException();
		this.name = name;
	} 
	public String getName() { return name; }

	private WImports imports;
	public void setImports(WImports imports) {
		if (imports == null) throw new IllegalArgumentException();
		((SortPosIntern)this.imports).setParent(null);
		((SortPosIntern)imports).setParent(this);
		this.imports = imports;
	} 
	public WImports getImports() { return imports; }

	private WEntities elements;
	public void setElements(WEntities elements) {
		if (elements == null) throw new IllegalArgumentException();
		((SortPosIntern)this.elements).setParent(null);
		((SortPosIntern)elements).setParent(this);
		this.elements = elements;
	} 
	public WEntities getElements() { return elements; }

	@Override public void accept(WPackage.Visitor v) {
		source.accept(v);
		imports.accept(v);
		elements.accept(v);
		v.visit(this);
	}
	@Override public void accept(WScope.Visitor v) {
		source.accept(v);
		imports.accept(v);
		elements.accept(v);
		v.visit(this);
	}
	@Override public void accept(TopLevelDeclaration.Visitor v) {
		source.accept(v);
		imports.accept(v);
		elements.accept(v);
		v.visit(this);
	}
	@Override public void accept(CompilationUnit.Visitor v) {
		source.accept(v);
		imports.accept(v);
		elements.accept(v);
		v.visit(this);
	}
	@Override public void accept(PackageOrGlobal.Visitor v) {
		source.accept(v);
		imports.accept(v);
		elements.accept(v);
		v.visit(this);
	}
	@Override public <T> T match(TopLevelDeclaration.Matcher<T> matcher) {
		return matcher.case_WPackage(this);
	}
	@Override public void match(TopLevelDeclaration.MatcherVoid matcher) {
		matcher.case_WPackage(this);
	}

	@Override public <T> T match(WScope.Matcher<T> matcher) {
		return matcher.case_WPackage(this);
	}
	@Override public void match(WScope.MatcherVoid matcher) {
		matcher.case_WPackage(this);
	}

	@Override public <T> T match(PackageOrGlobal.Matcher<T> matcher) {
		return matcher.case_WPackage(this);
	}
	@Override public void match(PackageOrGlobal.MatcherVoid matcher) {
		matcher.case_WPackage(this);
	}

}
