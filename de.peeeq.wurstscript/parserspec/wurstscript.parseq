package de.peeeq.wurstscript.ast


abstract syntax:

WPos ( String file, Integer line, Integer column ) // TODO use Wpos to track positions

CompilationUnit * TopLevelDeclaration

TopLevelDeclaration = WPackage | JassToplevelDeclaration

WPackage(WPos source, String name, WImports imports, WEntities elements)

WImports * WImport
WEntities * WEntity

WImport(WPos source, String packagename)

WEntity = 
	  TypeDef
	| FuncDef
	| GlobalVarDef
	| ExtensionFuncDef(WPos source, Modifiers modifiers, TypeExpr extendedType, FuncSignature signature, WStatements body)
	| InitBlock (WPos source, WStatements body)
	| NativeFunc(WPos source, Modifiers modifiers, FuncSignature signature)
	| ModuleDef(WPos source, Modifiers modifiers, String name, ClassSlots slots)


TypeExpr = 
	  TypeExprSimple(WPos source, String typeName)
	| TypeExprArray(WPos source, TypeExpr base)
	| TypeExprThis(WPos source)
	
	
OptTypeExpr = NoTypeExpr() | TypeExpr
OptExpr = NoExpr() | Expr
	
TypeDef = 
	 NativeType(WPos source, Modifiers modifiers, String name, OptTypeExpr typ)
	|ClassDef(WPos source, Modifiers modifiers, String name, boolean unmanaged, ClassSlots slots)
	
ClassSlots * ClassSlot

ClassSlot = 
	  ConstructorDef(WPos source, Modifiers modifiers, WParameters params, WStatements body)
	| OnDestroyDef(WPos source, WStatements body)
	| ModuleUse(WPos source, String moduleName)
	| ModuleInstanciation(WPos source, String name, ClassSlots slots) 
	| ClassMember
	
ClassMember = 
	  GlobalVarDef
	| FuncDef


GlobalVarDef(WPos source, Modifiers modifiers, boolean isConstant, OptTypeExpr typ, String name, OptExpr initialExpr)
LocalVarDef(WPos source, boolean constant, OptTypeExpr typ, String name, OptExpr initialExpr) 

	
FuncDef(WPos source, Modifiers modifiers, FuncSignature signature, WStatements body)
	


ArraySizes * Expr
	
FuncSignature(WPos source, String name, WParameters parameters, OptTypeExpr typ)	

WParameters * WParameter
WParameter(WPos source, TypeExpr typ, String name)
	
WStatements * WStatement
	
WStatement	=
	  StmtIf(WPos source, Expr cond, WStatements thenBlock, WStatements elseBlock)
	| StmtWhile(WPos source, Expr cond, WStatements body)
	| StmtLoop(WPos source, WStatements body)
	| LocalVarDef
	| StmtSet(WPos source, ExprAssignable left, OpAssignment op, Expr right)
	| StmtCall
	| StmtReturn(WPos source, OptExpr obj)
	| StmtDestroy(WPos source, Expr obj)
//	| StmtIncRefCount(WPos source, Expr obj) 
//	| StmtDecRefCount(WPos source, Expr obj)
	| StmtErr(WPos source)
	| StmtExitwhen(WPos source, Expr cond)
	| StmtForRange(WPos source, LocalVarDef loopVar, Expr from, Expr to, WStatements body)
	

OpAssignment = OpAssign() // TODO += -= *= /= ...
	| OpUpdateAssign

OpUpdateAssign =
	  OpPlusAssign()
	| OpMultAssign()
	| OpMinusAssign()

StmtCall = ExprMemberMethod | ExprFunctionCall | ExprNewObject

// an expression which you can assign a value to
ExprAssignable = ExprMemberVar | ExprMemberArrayVar | ExprVarAccess | ExprVarArrayAccess

Expr = 
	ExprAssignable
	| ExprBinary(WPos source, Expr left, OpBinary op, Expr right)
	| ExprUnary(WPos source, OpUnary op, Expr right)
	| ExprMemberVar(WPos source, Expr left, String varName)
	| ExprMemberArrayVar(WPos source, Expr left, String varName, Indexes indexes)
	| ExprMemberMethod(WPos source, Expr left, String funcName, Arguments args)
	| ExprFunctionCall(WPos source, String funcName, Arguments args)
	| ExprNewObject(WPos source, String typeName, Arguments args)
	| ExprCast(WPos source, TypeExpr typ, Expr expr)
	| ExprAtomic
	
	
ExprAtomic = 
	  ExprIntVal(WPos source, int val)
	| ExprRealVal(WPos source, double val)
	| ExprStringVal(WPos source, String val)
	| ExprBoolVal(WPos source, boolean val)
	| ExprFuncRef(WPos source, String funcName)
	| ExprVarAccess(WPos source, String varName)
	| ExprVarArrayAccess(WPos source, String varName, Indexes indexes)
	| ExprThis(WPos source)
	| ExprNull(WPos source)
	
	
Indexes * Expr
Arguments * Expr
	
	
OpBinary = 
	  OpOr() 
	| OpAnd()
	| OpEquals()
	| OpUnequals()
	| OpLessEq()
	| OpLess()
	| OpGreaterEq()
	| OpGreater()
	| OpPlus()
	| OpMinus()
	| OpMult()
	| OpDivReal()
	| OpModReal()
	| OpModInt()
	| OpDivInt()
	
OpUnary = 
	  OpNot()
	| OpMinus
	
Op = OpBinary | OpUnary	
	
// auxiliary types:

// a reference to a variable, needs a varName:String attribute
NameRef = ExprVarArrayAccess | ExprVarAccess | ExprMemberVar | ExprMemberArrayVar

VarDef = 
	GlobalVarDef
	| LocalVarDef
	| WParameter

// has funcName:String attribute
FuncRef = ExprFuncRef | ExprMemberMethod | ExprFunctionCall
	
	
NotExtensionFunction = NativeFunc | FuncDef

FunctionDefinition = NotExtensionFunction | ExtensionFuncDef
	
FunctionImplementation = FuncDef | ExtensionFuncDef

WScope = 
	  NamedScope 
	| PackageOrGlobal 
	| FunctionImplementation 
	| ConstructorDef 
	| OnDestroyDef 
	| InitBlock

PackageOrGlobal = WPackage | CompilationUnit	
	
TypeRef = TypeExpr | ExprNewObject

NameDef = VarDef | ClassDef | ModuleDef | ModuleInstanciation

VisibilityModifier = 
	  VisibilityPublic(WPos source) 
	| VisibilityPrivate(WPos source) 
	| VisibilityPublicread(WPos source) 
	| VisibilityProtected(WPos source)
	| VisibilityDefault(WPos source)

Modifiers * Modifier

Modifier = 
	  VisibilityModifier
	| ModStatic(WPos source)
	| ModOverride(WPos source)
	| ModAbstract(WPos source)
	| ModConstant(WPos source)
	

AstElementWithModifier = TypeDef | ModuleDef | ConstructorDef | GlobalVarDef | FunctionDefinition
	
ClassOrModule = ClassDef | ModuleDef	

ClassOrModuleOrModuleInstanciation = ClassOrModule | ModuleInstanciation

NamedScope = WPackage | ClassDef | ModuleDef | ModuleInstanciation

// Jass types:


JassToplevelDeclaration = JassGlobalBlock | NotExtensionFunction | NativeType

JassGlobalBlock * GlobalVarDef



attributes:

ExprNewObject.attrConstructorDef 
	returns ConstructorDef 
	implemented by de.peeeq.wurstscript.attributes.AttrConstructorDef.calculate


WStatements.attrDoesReturn
	returns boolean 
	implemented by de.peeeq.wurstscript.attributes.AttrDoesReturn.calculate


	
WPackage.attrExportedFunctions
	returns java.util.Map<String, NotExtensionFunction>
	implemented by de.peeeq.wurstscript.attributes.AttrExportedFunctions.calculate

WPackage.attrExportedExtensionFunctions
	returns com.google.common.collect.Multimap<String, ExtensionFuncDef>
	implemented by de.peeeq.wurstscript.attributes.AttrExportedFunctions.calculateExportedExtensionFunctions


OptTypeExpr.attrTyp
	returns de.peeeq.wurstscript.types.PscriptType
	implemented by de.peeeq.wurstscript.attributes.AttrTypeExprType.calculate


Expr.attrTyp
	returns de.peeeq.wurstscript.types.PscriptType 
	implemented by de.peeeq.wurstscript.attributes.AttrExprType.calculate


FuncRef.attrFuncDef
	returns FunctionDefinition
	implemented by de.peeeq.wurstscript.attributes.AttrFuncDef.calculate



NameRef.attrNameDef
	returns NameDef
	implemented by de.peeeq.wurstscript.attributes.AttrNameDef.calculate

WScope.attrScopeNames
	returns java.util.Map<String, NameDef>
	implemented by de.peeeq.wurstscript.attributes.AttrScopeNames.calculate

NamedScope.attrScopePackageNames
	returns java.util.Map<String, NameDef>
	implemented by de.peeeq.wurstscript.attributes.AttrScopeNames.calculatePackage
	
NamedScope.attrScopePublicNames
	returns java.util.Map<String, NameDef>
	implemented by de.peeeq.wurstscript.attributes.AttrScopeNames.calculatePublic

NamedScope.attrScopePublicReadNamess
	returns java.util.Map<String, NameDef>
	implemented by de.peeeq.wurstscript.attributes.AttrScopeNames.calculatePublicRead


NamedScope.attrScopeFunctions
	returns java.util.Map<String, NotExtensionFunction>
	implemented by de.peeeq.wurstscript.attributes.AttrScopeFunctions.calculate
	
CompilationUnit.attrScopeFunctions
	returns java.util.Map<String, NotExtensionFunction>
	implemented by de.peeeq.wurstscript.attributes.AttrScopeFunctions.calculateForRoot

NamedScope.attrScopePackageFunctions
	returns java.util.Map<String, NotExtensionFunction>
	implemented by de.peeeq.wurstscript.attributes.AttrScopeFunctions.calculatePackage

NamedScope.attrScopePublicFunctions
	returns java.util.Map<String, NotExtensionFunction>
	implemented by de.peeeq.wurstscript.attributes.AttrScopeFunctions.calculatePublic


WPackage.attrScopeExtensionFunctions
	returns com.google.common.collect.Multimap<String, ExtensionFuncDef>
	implemented by de.peeeq.wurstscript.attributes.AttrScopeFunctions.calculateExtensionFunctions


NameDef.attrTyp
	returns de.peeeq.wurstscript.types.PscriptType 
	implemented by de.peeeq.wurstscript.attributes.AttrVarDefType.calculate


VarDef.attrIsDynamicClassMember
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.AttrIsClassMember.calculate

FunctionDefinition.attrIsDynamicClassMember
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.AttrIsClassMember.calculate

PackageOrGlobal.attrPackageElements
	returns com.google.common.collect.Multimap<String, WEntity>
	implemented by de.peeeq.wurstscript.attributes.AttrPackageElements.calculate
	

AstElement.attrIsDynamicContext
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.IsDynamicContext.calculate	

AstElement.attrNearestPackage
	returns PackageOrGlobal
	implemented by de.peeeq.wurstscript.attributes.AttrNearest.nearestPackage

AstElement.attrNearestNamedScope
	returns NamedScope
	implemented by de.peeeq.wurstscript.attributes.AttrNearest.nearestNamedScope
	
	
AstElement.attrNearestClassDef
	returns ClassDef
	implemented by de.peeeq.wurstscript.attributes.AttrNearest.nearestClassDef

AstElement.attrNearestClassOrModule
	returns ClassOrModule
	implemented by de.peeeq.wurstscript.attributes.AttrNearest.nearestClassOrModule	
	
AstElement.attrNearestFuncDef
	returns FunctionImplementation
	implemented by de.peeeq.wurstscript.attributes.AttrNearest.nearestFuncDef

ModuleUse.attrModuleDef
	returns ModuleDef
	implemented by de.peeeq.wurstscript.attributes.AttrModuleDef.calculate

TypeRef.attrTypeDef
	returns TypeDef
	implemented by de.peeeq.wurstscript.attributes.AttrTypeDef.calculate





WPackage.attrExportedNames
	returns java.util.Map<String, NameDef>
	implemented by de.peeeq.wurstscript.attributes.AttrExportedNames.calculate
	

AstElementWithModifier.attrIsPublic
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.ModifiersHelper.isPublic

AstElementWithModifier.attrIsPublicRead
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.ModifiersHelper.isPublicRead

AstElementWithModifier.attrIsPrivate
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.ModifiersHelper.isPrivate

AstElementWithModifier.attrIsProtected
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.ModifiersHelper.isProtected
	
AstElementWithModifier.attrIsStatic
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.ModifiersHelper.isStatic

AstElementWithModifier.attrIsOverride
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.ModifiersHelper.isOverride

AstElementWithModifier.attrIsAbstract
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.ModifiersHelper.isAbstract

AstElementWithModifier.attrIsConstant
	returns boolean
	implemented by de.peeeq.wurstscript.attributes.ModifiersHelper.isConstant
	
	
FunctionDefinition.attrOverriddenFunctions
	returns java.util.Collection<FunctionDefinition>
	implemented by de.peeeq.wurstscript.attributes.OverriddenFunctions.calculate

ClassOrModuleOrModuleInstanciation.attrAllFunctions
	returns java.util.Map<String, FuncDef>
	implemented by de.peeeq.wurstscript.attributes.AttrAllFunctions.calculate


ClassOrModule.attrUsedModules
	returns java.util.Collection<ModuleDef>
	implemented by de.peeeq.wurstscript.attributes.AttrUsedModules.calculate







