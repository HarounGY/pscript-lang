package de.peeeq.wurstscript.parser;

import java.lang.reflect.Field;
import java.util.List;

import java_cup.runtime.Scanner;
import java_cup.runtime.Symbol;
import de.peeeq.wurstscript.WLogger;
import de.peeeq.wurstscript.ast.Ast;
import de.peeeq.wurstscript.ast.WPos;
import de.peeeq.wurstscript.attributes.CompileError;
import de.peeeq.wurstscript.gui.WurstGui;
import de.peeeq.wurstscript.utils.NotNullList;

/**
 * This parser extends the parser class generated by java-cup
 * and adds some stuff like error handling 
 *
 */
public class ExtendedParser extends WurstParser {

	private List<CompileError> errors = new NotNullList<CompileError>();
	private WurstGui gui;
	
	
	public void setFilename(String filename) {
		this.currentFile = filename;
	}
	
	public Object parseInput() throws Exception {
		boolean b = super.parse();
		if (!b) {
			return null;
		}
		return getReturn();
	}
	
	
	public ExtendedParser(WurstScriptScanner scanner, WurstGui gui) {
		super("", scanner);
		this.gui = gui;
	}

	public int getErrorCount() {
		return errors.size();
	}
	
	
	@Override
	protected void yyerror(String msg) {
		if (yyerrno >= 0) {
			msg = yyerrmsgs[yyerrno];
		}
		CompileError e = new CompileError(Ast.WPos(currentFile, current.line, current.column) , msg);
		errors.add(e );
		gui.sendError(e);
	}

}
