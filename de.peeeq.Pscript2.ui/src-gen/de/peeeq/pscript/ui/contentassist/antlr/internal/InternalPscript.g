/*
* generated by Xtext
*/
grammar InternalPscript;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.peeeq.pscript.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.peeeq.pscript.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.peeeq.pscript.services.PscriptGrammarAccess;

}

@parser::members {
 
 	private PscriptGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PscriptGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportString
entryRuleImportString 
:
{ before(grammarAccess.getImportStringRule()); }
	 ruleImportString
{ after(grammarAccess.getImportStringRule()); } 
	 EOF 
;

// Rule ImportString
ruleImportString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportStringAccess().getGroup()); }
(rule__ImportString__Group__0)
{ after(grammarAccess.getImportStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getAlternatives()); }
(rule__Entity__Alternatives)
{ after(grammarAccess.getEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitBlock
entryRuleInitBlock 
:
{ before(grammarAccess.getInitBlockRule()); }
	 ruleInitBlock
{ after(grammarAccess.getInitBlockRule()); } 
	 EOF 
;

// Rule InitBlock
ruleInitBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitBlockAccess().getGroup()); }
(rule__InitBlock__Group__0)
{ after(grammarAccess.getInitBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDef
entryRuleTypeDef 
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDefAccess().getAlternatives()); }
(rule__TypeDef__Alternatives)
{ after(grammarAccess.getTypeDefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNativeFunc
entryRuleNativeFunc 
:
{ before(grammarAccess.getNativeFuncRule()); }
	 ruleNativeFunc
{ after(grammarAccess.getNativeFuncRule()); } 
	 EOF 
;

// Rule NativeFunc
ruleNativeFunc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNativeFuncAccess().getGroup()); }
(rule__NativeFunc__Group__0)
{ after(grammarAccess.getNativeFuncAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNativeType
entryRuleNativeType 
:
{ before(grammarAccess.getNativeTypeRule()); }
	 ruleNativeType
{ after(grammarAccess.getNativeTypeRule()); } 
	 EOF 
;

// Rule NativeType
ruleNativeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNativeTypeAccess().getGroup()); }
(rule__NativeType__Group__0)
{ after(grammarAccess.getNativeTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDef
entryRuleClassDef 
:
{ before(grammarAccess.getClassDefRule()); }
	 ruleClassDef
{ after(grammarAccess.getClassDefRule()); } 
	 EOF 
;

// Rule ClassDef
ruleClassDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDefAccess().getGroup()); }
(rule__ClassDef__Group__0)
{ after(grammarAccess.getClassDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassSlots
entryRuleClassSlots 
:
{ before(grammarAccess.getClassSlotsRule()); }
	 ruleClassSlots
{ after(grammarAccess.getClassSlotsRule()); } 
	 EOF 
;

// Rule ClassSlots
ruleClassSlots
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassSlotsAccess().getAlternatives()); }
(rule__ClassSlots__Alternatives)
{ after(grammarAccess.getClassSlotsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassMember
entryRuleClassMember 
:
{ before(grammarAccess.getClassMemberRule()); }
	 ruleClassMember
{ after(grammarAccess.getClassMemberRule()); } 
	 EOF 
;

// Rule ClassMember
ruleClassMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassMemberAccess().getAlternatives()); }
(rule__ClassMember__Alternatives)
{ after(grammarAccess.getClassMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDef
entryRuleVarDef 
:
{ before(grammarAccess.getVarDefRule()); }
	 ruleVarDef
{ after(grammarAccess.getVarDefRule()); } 
	 EOF 
;

// Rule VarDef
ruleVarDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDefAccess().getGroup()); }
(rule__VarDef__Group__0)
{ after(grammarAccess.getVarDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeExpr
entryRuleTypeExpr 
:
{ before(grammarAccess.getTypeExprRule()); }
	 ruleTypeExpr
{ after(grammarAccess.getTypeExprRule()); } 
	 EOF 
;

// Rule TypeExpr
ruleTypeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeExprAccess().getGroup()); }
(rule__TypeExpr__Group__0)
{ after(grammarAccess.getTypeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorDef
entryRuleConstructorDef 
:
{ before(grammarAccess.getConstructorDefRule()); }
	 ruleConstructorDef
{ after(grammarAccess.getConstructorDefRule()); } 
	 EOF 
;

// Rule ConstructorDef
ruleConstructorDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorDefAccess().getGroup()); }
(rule__ConstructorDef__Group__0)
{ after(grammarAccess.getConstructorDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOnDestroyDef
entryRuleOnDestroyDef 
:
{ before(grammarAccess.getOnDestroyDefRule()); }
	 ruleOnDestroyDef
{ after(grammarAccess.getOnDestroyDefRule()); } 
	 EOF 
;

// Rule OnDestroyDef
ruleOnDestroyDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOnDestroyDefAccess().getGroup()); }
(rule__OnDestroyDef__Group__0)
{ after(grammarAccess.getOnDestroyDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFuncDef
entryRuleFuncDef 
:
{ before(grammarAccess.getFuncDefRule()); }
	 ruleFuncDef
{ after(grammarAccess.getFuncDefRule()); } 
	 EOF 
;

// Rule FuncDef
ruleFuncDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFuncDefAccess().getGroup()); }
(rule__FuncDef__Group__0)
{ after(grammarAccess.getFuncDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDef
entryRuleParameterDef 
:
{ before(grammarAccess.getParameterDefRule()); }
	 ruleParameterDef
{ after(grammarAccess.getParameterDefRule()); } 
	 EOF 
;

// Rule ParameterDef
ruleParameterDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDefAccess().getGroup()); }
(rule__ParameterDef__Group__0)
{ after(grammarAccess.getParameterDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatements
entryRuleStatements 
:
{ before(grammarAccess.getStatementsRule()); }
	 ruleStatements
{ after(grammarAccess.getStatementsRule()); } 
	 EOF 
;

// Rule Statements
ruleStatements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementsAccess().getGroup()); }
(rule__Statements__Group__0)
{ after(grammarAccess.getStatementsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmtChangeRefCount
entryRuleStmtChangeRefCount 
:
{ before(grammarAccess.getStmtChangeRefCountRule()); }
	 ruleStmtChangeRefCount
{ after(grammarAccess.getStmtChangeRefCountRule()); } 
	 EOF 
;

// Rule StmtChangeRefCount
ruleStmtChangeRefCount
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getGroup()); }
(rule__StmtChangeRefCount__Group__0)
{ after(grammarAccess.getStmtChangeRefCountAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmtDestroy
entryRuleStmtDestroy 
:
{ before(grammarAccess.getStmtDestroyRule()); }
	 ruleStmtDestroy
{ after(grammarAccess.getStmtDestroyRule()); } 
	 EOF 
;

// Rule StmtDestroy
ruleStmtDestroy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtDestroyAccess().getGroup()); }
(rule__StmtDestroy__Group__0)
{ after(grammarAccess.getStmtDestroyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmtReturn
entryRuleStmtReturn 
:
{ before(grammarAccess.getStmtReturnRule()); }
	 ruleStmtReturn
{ after(grammarAccess.getStmtReturnRule()); } 
	 EOF 
;

// Rule StmtReturn
ruleStmtReturn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtReturnAccess().getGroup()); }
(rule__StmtReturn__Group__0)
{ after(grammarAccess.getStmtReturnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmtIf
entryRuleStmtIf 
:
{ before(grammarAccess.getStmtIfRule()); }
	 ruleStmtIf
{ after(grammarAccess.getStmtIfRule()); } 
	 EOF 
;

// Rule StmtIf
ruleStmtIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtIfAccess().getGroup()); }
(rule__StmtIf__Group__0)
{ after(grammarAccess.getStmtIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmtWhile
entryRuleStmtWhile 
:
{ before(grammarAccess.getStmtWhileRule()); }
	 ruleStmtWhile
{ after(grammarAccess.getStmtWhileRule()); } 
	 EOF 
;

// Rule StmtWhile
ruleStmtWhile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtWhileAccess().getGroup()); }
(rule__StmtWhile__Group__0)
{ after(grammarAccess.getStmtWhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVarDef
entryRuleLocalVarDef 
:
{ before(grammarAccess.getLocalVarDefRule()); }
	 ruleLocalVarDef
{ after(grammarAccess.getLocalVarDefRule()); } 
	 EOF 
;

// Rule LocalVarDef
ruleLocalVarDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVarDefAccess().getAlternatives()); }
(rule__LocalVarDef__Alternatives)
{ after(grammarAccess.getLocalVarDefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmtSetOrCallOrVarDef
entryRuleStmtSetOrCallOrVarDef 
:
{ before(grammarAccess.getStmtSetOrCallOrVarDefRule()); }
	 ruleStmtSetOrCallOrVarDef
{ after(grammarAccess.getStmtSetOrCallOrVarDefRule()); } 
	 EOF 
;

// Rule StmtSetOrCallOrVarDef
ruleStmtSetOrCallOrVarDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getGroup()); }
(rule__StmtSetOrCallOrVarDef__Group__0)
{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAssignment
entryRuleOpAssignment 
:
{ before(grammarAccess.getOpAssignmentRule()); }
	 ruleOpAssignment
{ after(grammarAccess.getOpAssignmentRule()); } 
	 EOF 
;

// Rule OpAssignment
ruleOpAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAssignmentAccess().getAlternatives()); }
(rule__OpAssignment__Alternatives)
{ after(grammarAccess.getOpAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getExprOrParserRuleCall()); }
	ruleExprOr
{ after(grammarAccess.getExprAccess().getExprOrParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprOr
entryRuleExprOr 
:
{ before(grammarAccess.getExprOrRule()); }
	 ruleExprOr
{ after(grammarAccess.getExprOrRule()); } 
	 EOF 
;

// Rule ExprOr
ruleExprOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprOrAccess().getGroup()); }
(rule__ExprOr__Group__0)
{ after(grammarAccess.getExprOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprAnd
entryRuleExprAnd 
:
{ before(grammarAccess.getExprAndRule()); }
	 ruleExprAnd
{ after(grammarAccess.getExprAndRule()); } 
	 EOF 
;

// Rule ExprAnd
ruleExprAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAndAccess().getGroup()); }
(rule__ExprAnd__Group__0)
{ after(grammarAccess.getExprAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprEquality
entryRuleExprEquality 
:
{ before(grammarAccess.getExprEqualityRule()); }
	 ruleExprEquality
{ after(grammarAccess.getExprEqualityRule()); } 
	 EOF 
;

// Rule ExprEquality
ruleExprEquality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprEqualityAccess().getGroup()); }
(rule__ExprEquality__Group__0)
{ after(grammarAccess.getExprEqualityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpEquality
entryRuleOpEquality 
:
{ before(grammarAccess.getOpEqualityRule()); }
	 ruleOpEquality
{ after(grammarAccess.getOpEqualityRule()); } 
	 EOF 
;

// Rule OpEquality
ruleOpEquality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpEqualityAccess().getAlternatives()); }
(rule__OpEquality__Alternatives)
{ after(grammarAccess.getOpEqualityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprComparison
entryRuleExprComparison 
:
{ before(grammarAccess.getExprComparisonRule()); }
	 ruleExprComparison
{ after(grammarAccess.getExprComparisonRule()); } 
	 EOF 
;

// Rule ExprComparison
ruleExprComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprComparisonAccess().getGroup()); }
(rule__ExprComparison__Group__0)
{ after(grammarAccess.getExprComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpComparison
entryRuleOpComparison 
:
{ before(grammarAccess.getOpComparisonRule()); }
	 ruleOpComparison
{ after(grammarAccess.getOpComparisonRule()); } 
	 EOF 
;

// Rule OpComparison
ruleOpComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpComparisonAccess().getAlternatives()); }
(rule__OpComparison__Alternatives)
{ after(grammarAccess.getOpComparisonAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprAdditive
entryRuleExprAdditive 
:
{ before(grammarAccess.getExprAdditiveRule()); }
	 ruleExprAdditive
{ after(grammarAccess.getExprAdditiveRule()); } 
	 EOF 
;

// Rule ExprAdditive
ruleExprAdditive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAdditiveAccess().getGroup()); }
(rule__ExprAdditive__Group__0)
{ after(grammarAccess.getExprAdditiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAdditive
entryRuleOpAdditive 
:
{ before(grammarAccess.getOpAdditiveRule()); }
	 ruleOpAdditive
{ after(grammarAccess.getOpAdditiveRule()); } 
	 EOF 
;

// Rule OpAdditive
ruleOpAdditive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAdditiveAccess().getAlternatives()); }
(rule__OpAdditive__Alternatives)
{ after(grammarAccess.getOpAdditiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprMult
entryRuleExprMult 
:
{ before(grammarAccess.getExprMultRule()); }
	 ruleExprMult
{ after(grammarAccess.getExprMultRule()); } 
	 EOF 
;

// Rule ExprMult
ruleExprMult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprMultAccess().getGroup()); }
(rule__ExprMult__Group__0)
{ after(grammarAccess.getExprMultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMultiplicative
entryRuleOpMultiplicative 
:
{ before(grammarAccess.getOpMultiplicativeRule()); }
	 ruleOpMultiplicative
{ after(grammarAccess.getOpMultiplicativeRule()); } 
	 EOF 
;

// Rule OpMultiplicative
ruleOpMultiplicative
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getAlternatives()); }
(rule__OpMultiplicative__Alternatives)
{ after(grammarAccess.getOpMultiplicativeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprSign
entryRuleExprSign 
:
{ before(grammarAccess.getExprSignRule()); }
	 ruleExprSign
{ after(grammarAccess.getExprSignRule()); } 
	 EOF 
;

// Rule ExprSign
ruleExprSign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprSignAccess().getAlternatives()); }
(rule__ExprSign__Alternatives)
{ after(grammarAccess.getExprSignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprNot
entryRuleExprNot 
:
{ before(grammarAccess.getExprNotRule()); }
	 ruleExprNot
{ after(grammarAccess.getExprNotRule()); } 
	 EOF 
;

// Rule ExprNot
ruleExprNot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprNotAccess().getAlternatives()); }
(rule__ExprNot__Alternatives)
{ after(grammarAccess.getExprNotAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprMember
entryRuleExprMember 
:
{ before(grammarAccess.getExprMemberRule()); }
	 ruleExprMember
{ after(grammarAccess.getExprMemberRule()); } 
	 EOF 
;

// Rule ExprMember
ruleExprMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprMemberAccess().getGroup()); }
(rule__ExprMember__Group__0)
{ after(grammarAccess.getExprMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprMemberRight
entryRuleExprMemberRight 
:
{ before(grammarAccess.getExprMemberRightRule()); }
	 ruleExprMemberRight
{ after(grammarAccess.getExprMemberRightRule()); } 
	 EOF 
;

// Rule ExprMemberRight
ruleExprMemberRight
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprMemberRightAccess().getGroup()); }
(rule__ExprMemberRight__Group__0)
{ after(grammarAccess.getExprMemberRightAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprSingle
entryRuleExprSingle 
:
{ before(grammarAccess.getExprSingleRule()); }
	 ruleExprSingle
{ after(grammarAccess.getExprSingleRule()); } 
	 EOF 
;

// Rule ExprSingle
ruleExprSingle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprSingleAccess().getAlternatives()); }
(rule__ExprSingle__Alternatives)
{ after(grammarAccess.getExprSingleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getGroup()); }
(rule__Number__Group__0)
{ after(grammarAccess.getNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprAtomic
entryRuleExprAtomic 
:
{ before(grammarAccess.getExprAtomicRule()); }
	 ruleExprAtomic
{ after(grammarAccess.getExprAtomicRule()); } 
	 EOF 
;

// Rule ExprAtomic
ruleExprAtomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAtomicAccess().getAlternatives()); }
(rule__ExprAtomic__Alternatives)
{ after(grammarAccess.getExprAtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprFunctionCall
entryRuleExprFunctionCall 
:
{ before(grammarAccess.getExprFunctionCallRule()); }
	 ruleExprFunctionCall
{ after(grammarAccess.getExprFunctionCallRule()); } 
	 EOF 
;

// Rule ExprFunctionCall
ruleExprFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprFunctionCallAccess().getGroup()); }
(rule__ExprFunctionCall__Group__0)
{ after(grammarAccess.getExprFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ImportString__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStringAccess().getAsteriskKeyword_2_0()); }

	'*' 

{ after(grammarAccess.getImportStringAccess().getAsteriskKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getImportStringAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getImportStringAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getTypeDefParserRuleCall_0()); }
	ruleTypeDef
{ after(grammarAccess.getEntityAccess().getTypeDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getFuncDefParserRuleCall_1()); }
	ruleFuncDef
{ after(grammarAccess.getEntityAccess().getFuncDefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getVarDefParserRuleCall_2()); }
	ruleVarDef
{ after(grammarAccess.getEntityAccess().getVarDefParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getInitBlockParserRuleCall_3()); }
	ruleInitBlock
{ after(grammarAccess.getEntityAccess().getInitBlockParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getNativeFuncParserRuleCall_4()); }
	ruleNativeFunc
{ after(grammarAccess.getEntityAccess().getNativeFuncParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefAccess().getNativeTypeParserRuleCall_0()); }
	ruleNativeType
{ after(grammarAccess.getTypeDefAccess().getNativeTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeDefAccess().getClassDefParserRuleCall_1()); }
	ruleClassDef
{ after(grammarAccess.getTypeDefAccess().getClassDefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getNLTerminalRuleCall_6_0()); }
	RULE_NL
{ after(grammarAccess.getClassDefAccess().getNLTerminalRuleCall_6_0()); }
)

    |(
{ before(grammarAccess.getClassDefAccess().getMembersAssignment_6_1()); }
(rule__ClassDef__MembersAssignment_6_1)
{ after(grammarAccess.getClassDefAccess().getMembersAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSlots__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassSlotsAccess().getConstructorDefParserRuleCall_0()); }
	ruleConstructorDef
{ after(grammarAccess.getClassSlotsAccess().getConstructorDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassSlotsAccess().getOnDestroyDefParserRuleCall_1()); }
	ruleOnDestroyDef
{ after(grammarAccess.getClassSlotsAccess().getOnDestroyDefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClassSlotsAccess().getClassMemberParserRuleCall_2()); }
	ruleClassMember
{ after(grammarAccess.getClassSlotsAccess().getClassMemberParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getVarDefParserRuleCall_0()); }
	ruleVarDef
{ after(grammarAccess.getClassMemberAccess().getVarDefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassMemberAccess().getFuncDefParserRuleCall_1()); }
	ruleFuncDef
{ after(grammarAccess.getClassMemberAccess().getFuncDefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getGroup_1_0()); }
(rule__VarDef__Group_1_0__0)
{ after(grammarAccess.getVarDefAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getVarDefAccess().getGroup_1_1()); }
(rule__VarDef__Group_1_1__0)
{ after(grammarAccess.getVarDefAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementsAccess().getNLTerminalRuleCall_1_0()); }
	RULE_NL
{ after(grammarAccess.getStatementsAccess().getNLTerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getStatementsAccess().getStatementsAssignment_1_1()); }
(rule__Statements__StatementsAssignment_1_1)
{ after(grammarAccess.getStatementsAccess().getStatementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStmtIfParserRuleCall_0()); }
	ruleStmtIf
{ after(grammarAccess.getStatementAccess().getStmtIfParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStmtWhileParserRuleCall_1()); }
	ruleStmtWhile
{ after(grammarAccess.getStatementAccess().getStmtWhileParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLocalVarDefParserRuleCall_2()); }
	ruleLocalVarDef
{ after(grammarAccess.getStatementAccess().getLocalVarDefParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStmtSetOrCallOrVarDefParserRuleCall_3()); }
	ruleStmtSetOrCallOrVarDef
{ after(grammarAccess.getStatementAccess().getStmtSetOrCallOrVarDefParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStmtReturnParserRuleCall_4()); }
	ruleStmtReturn
{ after(grammarAccess.getStatementAccess().getStmtReturnParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStmtDestroyParserRuleCall_5()); }
	ruleStmtDestroy
{ after(grammarAccess.getStatementAccess().getStmtDestroyParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStmtChangeRefCountParserRuleCall_6()); }
	ruleStmtChangeRefCount
{ after(grammarAccess.getStatementAccess().getStmtChangeRefCountParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtChangeRefCount__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getIncreaseAssignment_0_0()); }
(rule__StmtChangeRefCount__IncreaseAssignment_0_0)
{ after(grammarAccess.getStmtChangeRefCountAccess().getIncreaseAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getStmtChangeRefCountAccess().getDecreaseAssignment_0_1()); }
(rule__StmtChangeRefCount__DecreaseAssignment_0_1)
{ after(grammarAccess.getStmtChangeRefCountAccess().getDecreaseAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getGroup_0()); }
(rule__LocalVarDef__Group_0__0)
{ after(grammarAccess.getLocalVarDefAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLocalVarDefAccess().getGroup_1()); }
(rule__LocalVarDef__Group_1__0)
{ after(grammarAccess.getLocalVarDefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAssignmentAccess().getGroup_0()); }
(rule__OpAssignment__Group_0__0)
{ after(grammarAccess.getOpAssignmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOpAssignmentAccess().getGroup_1()); }
(rule__OpAssignment__Group_1__0)
{ after(grammarAccess.getOpAssignmentAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getOpAssignmentAccess().getGroup_2()); }
(rule__OpAssignment__Group_2__0)
{ after(grammarAccess.getOpAssignmentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getGroup_0()); }
(rule__OpEquality__Group_0__0)
{ after(grammarAccess.getOpEqualityAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getGroup_1()); }
(rule__OpEquality__Group_1__0)
{ after(grammarAccess.getOpEqualityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpComparison__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpComparisonAccess().getGroup_0()); }
(rule__OpComparison__Group_0__0)
{ after(grammarAccess.getOpComparisonAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOpComparisonAccess().getGroup_1()); }
(rule__OpComparison__Group_1__0)
{ after(grammarAccess.getOpComparisonAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getOpComparisonAccess().getGroup_2()); }
(rule__OpComparison__Group_2__0)
{ after(grammarAccess.getOpComparisonAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getOpComparisonAccess().getGroup_3()); }
(rule__OpComparison__Group_3__0)
{ after(grammarAccess.getOpComparisonAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdditive__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAdditiveAccess().getGroup_0()); }
(rule__OpAdditive__Group_0__0)
{ after(grammarAccess.getOpAdditiveAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOpAdditiveAccess().getGroup_1()); }
(rule__OpAdditive__Group_1__0)
{ after(grammarAccess.getOpAdditiveAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getGroup_0()); }
(rule__OpMultiplicative__Group_0__0)
{ after(grammarAccess.getOpMultiplicativeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getOpMultiplicativeAccess().getGroup_1()); }
(rule__OpMultiplicative__Group_1__0)
{ after(grammarAccess.getOpMultiplicativeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getOpMultiplicativeAccess().getGroup_2()); }
(rule__OpMultiplicative__Group_2__0)
{ after(grammarAccess.getOpMultiplicativeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getOpMultiplicativeAccess().getGroup_3()); }
(rule__OpMultiplicative__Group_3__0)
{ after(grammarAccess.getOpMultiplicativeAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getOpMultiplicativeAccess().getGroup_4()); }
(rule__OpMultiplicative__Group_4__0)
{ after(grammarAccess.getOpMultiplicativeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSignAccess().getGroup_0()); }
(rule__ExprSign__Group_0__0)
{ after(grammarAccess.getExprSignAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExprSignAccess().getExprNotParserRuleCall_1()); }
	ruleExprNot
{ after(grammarAccess.getExprSignAccess().getExprNotParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprNotAccess().getGroup_0()); }
(rule__ExprNot__Group_0__0)
{ after(grammarAccess.getExprNotAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExprNotAccess().getExprMemberParserRuleCall_1()); }
	ruleExprMember
{ after(grammarAccess.getExprNotAccess().getExprMemberParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getExprAtomicParserRuleCall_0()); }
	ruleExprAtomic
{ after(grammarAccess.getExprSingleAccess().getExprAtomicParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExprSingleAccess().getGroup_1()); }
(rule__ExprSingle__Group_1__0)
{ after(grammarAccess.getExprSingleAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExprSingleAccess().getGroup_2()); }
(rule__ExprSingle__Group_2__0)
{ after(grammarAccess.getExprSingleAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExprSingleAccess().getGroup_3()); }
(rule__ExprSingle__Group_3__0)
{ after(grammarAccess.getExprSingleAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExprSingleAccess().getGroup_4()); }
(rule__ExprSingle__Group_4__0)
{ after(grammarAccess.getExprSingleAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getExprSingleAccess().getGroup_5()); }
(rule__ExprSingle__Group_5__0)
{ after(grammarAccess.getExprSingleAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getExprSingleAccess().getGroup_6()); }
(rule__ExprSingle__Group_6__0)
{ after(grammarAccess.getExprSingleAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__BoolValAlternatives_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getBoolValTrueKeyword_5_1_0_0()); }

	'true' 

{ after(grammarAccess.getExprSingleAccess().getBoolValTrueKeyword_5_1_0_0()); }
)

    |(
{ before(grammarAccess.getExprSingleAccess().getBoolValFalseKeyword_5_1_0_1()); }

	'false' 

{ after(grammarAccess.getExprSingleAccess().getBoolValFalseKeyword_5_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getExprFunctionCallParserRuleCall_0()); }
	ruleExprFunctionCall
{ after(grammarAccess.getExprAtomicAccess().getExprFunctionCallParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExprAtomicAccess().getGroup_1()); }
(rule__ExprAtomic__Group_1__0)
{ after(grammarAccess.getExprAtomicAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExprAtomicAccess().getGroup_2()); }
(rule__ExprAtomic__Group_2__0)
{ after(grammarAccess.getExprAtomicAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExprAtomicAccess().getGroup_3()); }
(rule__ExprAtomic__Group_3__0)
{ after(grammarAccess.getExprAtomicAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNLTerminalRuleCall_0()); }
(	RULE_NL)*
{ after(grammarAccess.getProgramAccess().getNLTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getPackagesAssignment_1()); }
(rule__Program__PackagesAssignment_1)
{ after(grammarAccess.getProgramAccess().getPackagesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getPackagesAssignment_2()); }
(rule__Program__PackagesAssignment_2)*
{ after(grammarAccess.getProgramAccess().getPackagesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNLTerminalRuleCall_3()); }
(	RULE_NL)*
{ after(grammarAccess.getProgramAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageDeclarationAction_0()); }
(

)
{ after(grammarAccess.getPackageDeclarationAccess().getPackageDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_1()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_2()); }
(rule__PackageDeclaration__NameAssignment_2)
{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__4__Impl
	rule__PackageDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_4()); }
	RULE_NL
{ after(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__5__Impl
	rule__PackageDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup_5()); }
(rule__PackageDeclaration__Group_5__0)*
{ after(grammarAccess.getPackageDeclarationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__6__Impl
	rule__PackageDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_6()); }
(	RULE_NL)*
{ after(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__7__Impl
	rule__PackageDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup_7()); }
(rule__PackageDeclaration__Group_7__0)*
{ after(grammarAccess.getPackageDeclarationAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__8__Impl
	rule__PackageDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_9()); }
	RULE_NL
{ after(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__PackageDeclaration__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group_5__0__Impl
	rule__PackageDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_5_0()); }
(	RULE_NL)*
{ after(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getImportsAssignment_5_1()); }
(rule__PackageDeclaration__ImportsAssignment_5_1)
{ after(grammarAccess.getPackageDeclarationAccess().getImportsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDeclaration__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group_7__0__Impl
	rule__PackageDeclaration__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_7_0()); }
(rule__PackageDeclaration__ElementsAssignment_7_0)
{ after(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_7_1()); }
(	RULE_NL)*
{ after(grammarAccess.getPackageDeclarationAccess().getNLTerminalRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNLTerminalRuleCall_2()); }
	RULE_NL
{ after(grammarAccess.getImportAccess().getNLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportString__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportString__Group__0__Impl
	rule__ImportString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportString__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStringAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getImportStringAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportString__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportString__Group__1__Impl
	rule__ImportString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportString__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStringAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getImportStringAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportString__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportString__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportString__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStringAccess().getAlternatives_2()); }
(rule__ImportString__Alternatives_2)
{ after(grammarAccess.getImportStringAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InitBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBlock__Group__0__Impl
	rule__InitBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBlockAccess().getNameAssignment_0()); }
(rule__InitBlock__NameAssignment_0)
{ after(grammarAccess.getInitBlockAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBlock__Group__1__Impl
	rule__InitBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getInitBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBlock__Group__2__Impl
	rule__InitBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBlockAccess().getNLTerminalRuleCall_2()); }
	RULE_NL
{ after(grammarAccess.getInitBlockAccess().getNLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBlock__Group__3__Impl
	rule__InitBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBlockAccess().getBodyAssignment_3()); }
(rule__InitBlock__BodyAssignment_3)
{ after(grammarAccess.getInitBlockAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBlock__Group__4__Impl
	rule__InitBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBlockAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getInitBlockAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitBlock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitBlock__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitBlock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBlockAccess().getNLTerminalRuleCall_5()); }
	RULE_NL
{ after(grammarAccess.getInitBlockAccess().getNLTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__NativeFunc__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group__0__Impl
	rule__NativeFunc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getNativeFuncAction_0()); }
(

)
{ after(grammarAccess.getNativeFuncAccess().getNativeFuncAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group__1__Impl
	rule__NativeFunc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getNativeKeyword_1()); }

	'native' 

{ after(grammarAccess.getNativeFuncAccess().getNativeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group__2__Impl
	rule__NativeFunc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getNameAssignment_2()); }
(rule__NativeFunc__NameAssignment_2)
{ after(grammarAccess.getNativeFuncAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group__3__Impl
	rule__NativeFunc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getNativeFuncAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group__4__Impl
	rule__NativeFunc__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getGroup_4()); }
(rule__NativeFunc__Group_4__0)?
{ after(grammarAccess.getNativeFuncAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group__5__Impl
	rule__NativeFunc__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getNativeFuncAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group__6__Impl
	rule__NativeFunc__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getGroup_6()); }
(rule__NativeFunc__Group_6__0)?
{ after(grammarAccess.getNativeFuncAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getNLTerminalRuleCall_7()); }
	RULE_NL
{ after(grammarAccess.getNativeFuncAccess().getNLTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__NativeFunc__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group_4__0__Impl
	rule__NativeFunc__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getParametersAssignment_4_0()); }
(rule__NativeFunc__ParametersAssignment_4_0)
{ after(grammarAccess.getNativeFuncAccess().getParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getGroup_4_1()); }
(rule__NativeFunc__Group_4_1__0)*
{ after(grammarAccess.getNativeFuncAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NativeFunc__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group_4_1__0__Impl
	rule__NativeFunc__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getNativeFuncAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getParametersAssignment_4_1_1()); }
(rule__NativeFunc__ParametersAssignment_4_1_1)
{ after(grammarAccess.getNativeFuncAccess().getParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NativeFunc__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group_6__0__Impl
	rule__NativeFunc__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getReturnsKeyword_6_0()); }

	'returns' 

{ after(grammarAccess.getNativeFuncAccess().getReturnsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFunc__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFunc__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getTypeAssignment_6_1()); }
(rule__NativeFunc__TypeAssignment_6_1)
{ after(grammarAccess.getNativeFuncAccess().getTypeAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NativeType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeType__Group__0__Impl
	rule__NativeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getNativeTypeAction_0()); }
(

)
{ after(grammarAccess.getNativeTypeAccess().getNativeTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeType__Group__1__Impl
	rule__NativeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getNativetypeKeyword_1()); }

	'nativetype' 

{ after(grammarAccess.getNativeTypeAccess().getNativetypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeType__Group__2__Impl
	rule__NativeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getNameAssignment_2()); }
(rule__NativeType__NameAssignment_2)
{ after(grammarAccess.getNativeTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeType__Group__3__Impl
	rule__NativeType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getGroup_3()); }
(rule__NativeType__Group_3__0)?
{ after(grammarAccess.getNativeTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getNLTerminalRuleCall_4()); }
	RULE_NL
{ after(grammarAccess.getNativeTypeAccess().getNLTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NativeType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeType__Group_3__0__Impl
	rule__NativeType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getNativeTypeAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getSuperNameAssignment_3_1()); }
(rule__NativeType__SuperNameAssignment_3_1)
{ after(grammarAccess.getNativeTypeAccess().getSuperNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__0__Impl
	rule__ClassDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getClassDefAction_0()); }
(

)
{ after(grammarAccess.getClassDefAccess().getClassDefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__1__Impl
	rule__ClassDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getUnmanagedAssignment_1()); }
(rule__ClassDef__UnmanagedAssignment_1)?
{ after(grammarAccess.getClassDefAccess().getUnmanagedAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__2__Impl
	rule__ClassDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getClassKeyword_2()); }

	'class' 

{ after(grammarAccess.getClassDefAccess().getClassKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__3__Impl
	rule__ClassDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getNameAssignment_3()); }
(rule__ClassDef__NameAssignment_3)
{ after(grammarAccess.getClassDefAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__4__Impl
	rule__ClassDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getClassDefAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__5__Impl
	rule__ClassDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getNLTerminalRuleCall_5()); }
	RULE_NL
{ after(grammarAccess.getClassDefAccess().getNLTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__6__Impl
	rule__ClassDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getAlternatives_6()); }
(rule__ClassDef__Alternatives_6)*
{ after(grammarAccess.getClassDefAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__7__Impl
	rule__ClassDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getClassDefAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDef__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDef__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getNLTerminalRuleCall_8()); }
	RULE_NL
{ after(grammarAccess.getClassDefAccess().getNLTerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__VarDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group__0__Impl
	rule__VarDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getVarDefAction_0()); }
(

)
{ after(grammarAccess.getVarDefAccess().getVarDefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group__1__Impl
	rule__VarDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getAlternatives_1()); }
(rule__VarDef__Alternatives_1)
{ after(grammarAccess.getVarDefAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getNLTerminalRuleCall_2()); }
	RULE_NL
{ after(grammarAccess.getVarDefAccess().getNLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarDef__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_0__0__Impl
	rule__VarDef__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getConstantAssignment_1_0_0()); }
(rule__VarDef__ConstantAssignment_1_0_0)
{ after(grammarAccess.getVarDefAccess().getConstantAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_0__1__Impl
	rule__VarDef__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getTypeAssignment_1_0_1()); }
(rule__VarDef__TypeAssignment_1_0_1)?
{ after(grammarAccess.getVarDefAccess().getTypeAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_0__2__Impl
	rule__VarDef__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getNameAssignment_1_0_2()); }
(rule__VarDef__NameAssignment_1_0_2)
{ after(grammarAccess.getVarDefAccess().getNameAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_0__3__Impl
	rule__VarDef__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getEqualsSignKeyword_1_0_3()); }

	'=' 

{ after(grammarAccess.getVarDefAccess().getEqualsSignKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getEAssignment_1_0_4()); }
(rule__VarDef__EAssignment_1_0_4)
{ after(grammarAccess.getVarDefAccess().getEAssignment_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VarDef__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_1__0__Impl
	rule__VarDef__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getTypeAssignment_1_1_0()); }
(rule__VarDef__TypeAssignment_1_1_0)
{ after(grammarAccess.getVarDefAccess().getTypeAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_1__1__Impl
	rule__VarDef__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getNameAssignment_1_1_1()); }
(rule__VarDef__NameAssignment_1_1_1)
{ after(grammarAccess.getVarDefAccess().getNameAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getGroup_1_1_2()); }
(rule__VarDef__Group_1_1_2__0)?
{ after(grammarAccess.getVarDefAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarDef__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_1_2__0__Impl
	rule__VarDef__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getEqualsSignKeyword_1_1_2_0()); }

	'=' 

{ after(grammarAccess.getVarDefAccess().getEqualsSignKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getEAssignment_1_1_2_1()); }
(rule__VarDef__EAssignment_1_1_2_1)
{ after(grammarAccess.getVarDefAccess().getEAssignment_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpr__Group__0__Impl
	rule__TypeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getNameAssignment_0()); }
(rule__TypeExpr__NameAssignment_0)
{ after(grammarAccess.getTypeExprAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getGroup_1()); }
(rule__TypeExpr__Group_1__0)?
{ after(grammarAccess.getTypeExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpr__Group_1__0__Impl
	rule__TypeExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getArrayAssignment_1_0()); }
(rule__TypeExpr__ArrayAssignment_1_0)
{ after(grammarAccess.getTypeExprAccess().getArrayAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getGroup_1_1()); }
(rule__TypeExpr__Group_1_1__0)*
{ after(grammarAccess.getTypeExprAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpr__Group_1_1__0__Impl
	rule__TypeExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getLeftSquareBracketKeyword_1_1_0()); }

	'[' 

{ after(grammarAccess.getTypeExprAccess().getLeftSquareBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpr__Group_1_1__1__Impl
	rule__TypeExpr__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getSizesAssignment_1_1_1()); }
(rule__TypeExpr__SizesAssignment_1_1_1)
{ after(grammarAccess.getTypeExprAccess().getSizesAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeExpr__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeExpr__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getRightSquareBracketKeyword_1_1_2()); }

	']' 

{ after(grammarAccess.getTypeExprAccess().getRightSquareBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstructorDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group__0__Impl
	rule__ConstructorDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getConstructKeyword_0()); }

	'construct' 

{ after(grammarAccess.getConstructorDefAccess().getConstructKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group__1__Impl
	rule__ConstructorDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getConstructorDefAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group__2__Impl
	rule__ConstructorDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getGroup_2()); }
(rule__ConstructorDef__Group_2__0)?
{ after(grammarAccess.getConstructorDefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group__3__Impl
	rule__ConstructorDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getConstructorDefAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group__4__Impl
	rule__ConstructorDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getConstructorDefAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group__5__Impl
	rule__ConstructorDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getNLTerminalRuleCall_5()); }
	RULE_NL
{ after(grammarAccess.getConstructorDefAccess().getNLTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group__6__Impl
	rule__ConstructorDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getBodyAssignment_6()); }
(rule__ConstructorDef__BodyAssignment_6)
{ after(grammarAccess.getConstructorDefAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group__7__Impl
	rule__ConstructorDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getConstructorDefAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getNLTerminalRuleCall_8()); }
	RULE_NL
{ after(grammarAccess.getConstructorDefAccess().getNLTerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ConstructorDef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group_2__0__Impl
	rule__ConstructorDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getParametersAssignment_2_0()); }
(rule__ConstructorDef__ParametersAssignment_2_0)
{ after(grammarAccess.getConstructorDefAccess().getParametersAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getGroup_2_1()); }
(rule__ConstructorDef__Group_2_1__0)*
{ after(grammarAccess.getConstructorDefAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorDef__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group_2_1__0__Impl
	rule__ConstructorDef__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getConstructorDefAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDef__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorDef__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getParametersAssignment_2_1_1()); }
(rule__ConstructorDef__ParametersAssignment_2_1_1)
{ after(grammarAccess.getConstructorDefAccess().getParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OnDestroyDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnDestroyDef__Group__0__Impl
	rule__OnDestroyDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDestroyDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnDestroyDefAccess().getOnDestroyKeyword_0()); }

	'onDestroy' 

{ after(grammarAccess.getOnDestroyDefAccess().getOnDestroyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnDestroyDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnDestroyDef__Group__1__Impl
	rule__OnDestroyDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDestroyDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnDestroyDefAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getOnDestroyDefAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnDestroyDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnDestroyDef__Group__2__Impl
	rule__OnDestroyDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDestroyDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnDestroyDefAccess().getNLTerminalRuleCall_2()); }
	RULE_NL
{ after(grammarAccess.getOnDestroyDefAccess().getNLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnDestroyDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnDestroyDef__Group__3__Impl
	rule__OnDestroyDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDestroyDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnDestroyDefAccess().getBodyAssignment_3()); }
(rule__OnDestroyDef__BodyAssignment_3)
{ after(grammarAccess.getOnDestroyDefAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnDestroyDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnDestroyDef__Group__4__Impl
	rule__OnDestroyDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDestroyDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnDestroyDefAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getOnDestroyDefAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnDestroyDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnDestroyDef__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDestroyDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnDestroyDefAccess().getNLTerminalRuleCall_5()); }
	RULE_NL
{ after(grammarAccess.getOnDestroyDefAccess().getNLTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FuncDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__0__Impl
	rule__FuncDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFuncDefAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__1__Impl
	rule__FuncDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getNameAssignment_1()); }
(rule__FuncDef__NameAssignment_1)
{ after(grammarAccess.getFuncDefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__2__Impl
	rule__FuncDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFuncDefAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__3__Impl
	rule__FuncDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getGroup_3()); }
(rule__FuncDef__Group_3__0)?
{ after(grammarAccess.getFuncDefAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__4__Impl
	rule__FuncDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFuncDefAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__5__Impl
	rule__FuncDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getGroup_5()); }
(rule__FuncDef__Group_5__0)?
{ after(grammarAccess.getFuncDefAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__6__Impl
	rule__FuncDef__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getFuncDefAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__7__Impl
	rule__FuncDef__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getNLTerminalRuleCall_7()); }
	RULE_NL
{ after(grammarAccess.getFuncDefAccess().getNLTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__8__Impl
	rule__FuncDef__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getBodyAssignment_8()); }
(rule__FuncDef__BodyAssignment_8)
{ after(grammarAccess.getFuncDefAccess().getBodyAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__9__Impl
	rule__FuncDef__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getFuncDefAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getNLTerminalRuleCall_10()); }
	RULE_NL
{ after(grammarAccess.getFuncDefAccess().getNLTerminalRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__FuncDef__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group_3__0__Impl
	rule__FuncDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getParametersAssignment_3_0()); }
(rule__FuncDef__ParametersAssignment_3_0)
{ after(grammarAccess.getFuncDefAccess().getParametersAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getGroup_3_1()); }
(rule__FuncDef__Group_3_1__0)*
{ after(grammarAccess.getFuncDefAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FuncDef__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group_3_1__0__Impl
	rule__FuncDef__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getFuncDefAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getParametersAssignment_3_1_1()); }
(rule__FuncDef__ParametersAssignment_3_1_1)
{ after(grammarAccess.getFuncDefAccess().getParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FuncDef__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group_5__0__Impl
	rule__FuncDef__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getReturnsKeyword_5_0()); }

	'returns' 

{ after(grammarAccess.getFuncDefAccess().getReturnsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FuncDef__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FuncDef__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getTypeAssignment_5_1()); }
(rule__FuncDef__TypeAssignment_5_1)
{ after(grammarAccess.getFuncDefAccess().getTypeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDef__Group__0__Impl
	rule__ParameterDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefAccess().getParameterDefAction_0()); }
(

)
{ after(grammarAccess.getParameterDefAccess().getParameterDefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDef__Group__1__Impl
	rule__ParameterDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefAccess().getTypeAssignment_1()); }
(rule__ParameterDef__TypeAssignment_1)
{ after(grammarAccess.getParameterDefAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefAccess().getNameAssignment_2()); }
(rule__ParameterDef__NameAssignment_2)
{ after(grammarAccess.getParameterDefAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statements__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statements__Group__0__Impl
	rule__Statements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementsAccess().getStatementsAction_0()); }
(

)
{ after(grammarAccess.getStatementsAccess().getStatementsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statements__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementsAccess().getAlternatives_1()); }
(rule__Statements__Alternatives_1)*
{ after(grammarAccess.getStatementsAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StmtChangeRefCount__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtChangeRefCount__Group__0__Impl
	rule__StmtChangeRefCount__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtChangeRefCount__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getAlternatives_0()); }
(rule__StmtChangeRefCount__Alternatives_0)
{ after(grammarAccess.getStmtChangeRefCountAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtChangeRefCount__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtChangeRefCount__Group__1__Impl
	rule__StmtChangeRefCount__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtChangeRefCount__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getObjAssignment_1()); }
(rule__StmtChangeRefCount__ObjAssignment_1)
{ after(grammarAccess.getStmtChangeRefCountAccess().getObjAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtChangeRefCount__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtChangeRefCount__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtChangeRefCount__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getNLTerminalRuleCall_2()); }
	RULE_NL
{ after(grammarAccess.getStmtChangeRefCountAccess().getNLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StmtDestroy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtDestroy__Group__0__Impl
	rule__StmtDestroy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtDestroy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtDestroyAccess().getDestroyKeyword_0()); }

	'destroy' 

{ after(grammarAccess.getStmtDestroyAccess().getDestroyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtDestroy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtDestroy__Group__1__Impl
	rule__StmtDestroy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtDestroy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtDestroyAccess().getObjAssignment_1()); }
(rule__StmtDestroy__ObjAssignment_1)
{ after(grammarAccess.getStmtDestroyAccess().getObjAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtDestroy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtDestroy__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtDestroy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtDestroyAccess().getNLTerminalRuleCall_2()); }
	RULE_NL
{ after(grammarAccess.getStmtDestroyAccess().getNLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StmtReturn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtReturn__Group__0__Impl
	rule__StmtReturn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtReturn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtReturnAccess().getStmtReturnAction_0()); }
(

)
{ after(grammarAccess.getStmtReturnAccess().getStmtReturnAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtReturn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtReturn__Group__1__Impl
	rule__StmtReturn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtReturn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtReturnAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getStmtReturnAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtReturn__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtReturn__Group__2__Impl
	rule__StmtReturn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtReturn__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtReturnAccess().getEAssignment_2()); }
(rule__StmtReturn__EAssignment_2)?
{ after(grammarAccess.getStmtReturnAccess().getEAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtReturn__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtReturn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtReturn__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtReturnAccess().getNLTerminalRuleCall_3()); }
	RULE_NL
{ after(grammarAccess.getStmtReturnAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StmtIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group__0__Impl
	rule__StmtIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getStmtIfAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group__1__Impl
	rule__StmtIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getCondAssignment_1()); }
(rule__StmtIf__CondAssignment_1)
{ after(grammarAccess.getStmtIfAccess().getCondAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group__2__Impl
	rule__StmtIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStmtIfAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group__3__Impl
	rule__StmtIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getNLTerminalRuleCall_3()); }
	RULE_NL
{ after(grammarAccess.getStmtIfAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group__4__Impl
	rule__StmtIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getThenBlockAssignment_4()); }
(rule__StmtIf__ThenBlockAssignment_4)
{ after(grammarAccess.getStmtIfAccess().getThenBlockAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group__5__Impl
	rule__StmtIf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStmtIfAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group__6__Impl
	rule__StmtIf__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getGroup_6()); }
(rule__StmtIf__Group_6__0)?
{ after(grammarAccess.getStmtIfAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getNLTerminalRuleCall_7()); }
	RULE_NL
{ after(grammarAccess.getStmtIfAccess().getNLTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__StmtIf__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group_6__0__Impl
	rule__StmtIf__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getElseKeyword_6_0()); }

	'else' 

{ after(grammarAccess.getStmtIfAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group_6__1__Impl
	rule__StmtIf__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getLeftCurlyBracketKeyword_6_1()); }

	'{' 

{ after(grammarAccess.getStmtIfAccess().getLeftCurlyBracketKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group_6__2__Impl
	rule__StmtIf__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getNLTerminalRuleCall_6_2()); }
	RULE_NL
{ after(grammarAccess.getStmtIfAccess().getNLTerminalRuleCall_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group_6__3__Impl
	rule__StmtIf__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getElseBlockAssignment_6_3()); }
(rule__StmtIf__ElseBlockAssignment_6_3)
{ after(grammarAccess.getStmtIfAccess().getElseBlockAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtIf__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtIf__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getRightCurlyBracketKeyword_6_4()); }

	'}' 

{ after(grammarAccess.getStmtIfAccess().getRightCurlyBracketKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StmtWhile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWhile__Group__0__Impl
	rule__StmtWhile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWhile__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWhileAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getStmtWhileAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWhile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWhile__Group__1__Impl
	rule__StmtWhile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWhile__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWhileAccess().getCondAssignment_1()); }
(rule__StmtWhile__CondAssignment_1)
{ after(grammarAccess.getStmtWhileAccess().getCondAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWhile__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWhile__Group__2__Impl
	rule__StmtWhile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWhile__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWhileAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStmtWhileAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWhile__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWhile__Group__3__Impl
	rule__StmtWhile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWhile__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWhileAccess().getNLTerminalRuleCall_3()); }
	RULE_NL
{ after(grammarAccess.getStmtWhileAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWhile__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWhile__Group__4__Impl
	rule__StmtWhile__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWhile__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWhileAccess().getBodyAssignment_4()); }
(rule__StmtWhile__BodyAssignment_4)
{ after(grammarAccess.getStmtWhileAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWhile__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWhile__Group__5__Impl
	rule__StmtWhile__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWhile__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWhileAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStmtWhileAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtWhile__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtWhile__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWhile__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWhileAccess().getNLTerminalRuleCall_6()); }
	RULE_NL
{ after(grammarAccess.getStmtWhileAccess().getNLTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__LocalVarDef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_0__0__Impl
	rule__LocalVarDef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getVarDefAction_0_0()); }
(

)
{ after(grammarAccess.getLocalVarDefAccess().getVarDefAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_0__1__Impl
	rule__LocalVarDef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getConstantAssignment_0_1()); }
(rule__LocalVarDef__ConstantAssignment_0_1)
{ after(grammarAccess.getLocalVarDefAccess().getConstantAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_0__2__Impl
	rule__LocalVarDef__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getTypeAssignment_0_2()); }
(rule__LocalVarDef__TypeAssignment_0_2)?
{ after(grammarAccess.getLocalVarDefAccess().getTypeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_0__3__Impl
	rule__LocalVarDef__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getNameAssignment_0_3()); }
(rule__LocalVarDef__NameAssignment_0_3)
{ after(grammarAccess.getLocalVarDefAccess().getNameAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_0__4__Impl
	rule__LocalVarDef__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getGroup_0_4()); }
(rule__LocalVarDef__Group_0_4__0)?
{ after(grammarAccess.getLocalVarDefAccess().getGroup_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getNLTerminalRuleCall_0_5()); }
	RULE_NL
{ after(grammarAccess.getLocalVarDefAccess().getNLTerminalRuleCall_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LocalVarDef__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_0_4__0__Impl
	rule__LocalVarDef__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getEqualsSignKeyword_0_4_0()); }

	'=' 

{ after(grammarAccess.getLocalVarDefAccess().getEqualsSignKeyword_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getEAssignment_0_4_1()); }
(rule__LocalVarDef__EAssignment_0_4_1)
{ after(grammarAccess.getLocalVarDefAccess().getEAssignment_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVarDef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_1__0__Impl
	rule__LocalVarDef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getVarDefAction_1_0()); }
(

)
{ after(grammarAccess.getLocalVarDefAccess().getVarDefAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_1__1__Impl
	rule__LocalVarDef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getTypeAssignment_1_1()); }
(rule__LocalVarDef__TypeAssignment_1_1)
{ after(grammarAccess.getLocalVarDefAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_1__2__Impl
	rule__LocalVarDef__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getNameAssignment_1_2()); }
(rule__LocalVarDef__NameAssignment_1_2)
{ after(grammarAccess.getLocalVarDefAccess().getNameAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_1__3__Impl
	rule__LocalVarDef__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getGroup_1_3()); }
(rule__LocalVarDef__Group_1_3__0)?
{ after(grammarAccess.getLocalVarDefAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getNLTerminalRuleCall_1_4()); }
	RULE_NL
{ after(grammarAccess.getLocalVarDefAccess().getNLTerminalRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LocalVarDef__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_1_3__0__Impl
	rule__LocalVarDef__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getEqualsSignKeyword_1_3_0()); }

	'=' 

{ after(grammarAccess.getLocalVarDefAccess().getEqualsSignKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDef__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDef__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getEAssignment_1_3_1()); }
(rule__LocalVarDef__EAssignment_1_3_1)
{ after(grammarAccess.getLocalVarDefAccess().getEAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StmtSetOrCallOrVarDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtSetOrCallOrVarDef__Group__0__Impl
	rule__StmtSetOrCallOrVarDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getStmtCallAction_0()); }
(

)
{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getStmtCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtSetOrCallOrVarDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtSetOrCallOrVarDef__Group__1__Impl
	rule__StmtSetOrCallOrVarDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getEAssignment_1()); }
(rule__StmtSetOrCallOrVarDef__EAssignment_1)
{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getEAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtSetOrCallOrVarDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtSetOrCallOrVarDef__Group__2__Impl
	rule__StmtSetOrCallOrVarDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getGroup_2()); }
(rule__StmtSetOrCallOrVarDef__Group_2__0)?
{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtSetOrCallOrVarDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtSetOrCallOrVarDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getNLTerminalRuleCall_3()); }
	RULE_NL
{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StmtSetOrCallOrVarDef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtSetOrCallOrVarDef__Group_2__0__Impl
	rule__StmtSetOrCallOrVarDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getStmtSetLeftAction_2_0()); }
(

)
{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getStmtSetLeftAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtSetOrCallOrVarDef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtSetOrCallOrVarDef__Group_2__1__Impl
	rule__StmtSetOrCallOrVarDef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getOpAssignmentAssignment_2_1()); }
(rule__StmtSetOrCallOrVarDef__OpAssignmentAssignment_2_1)
{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getOpAssignmentAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StmtSetOrCallOrVarDef__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StmtSetOrCallOrVarDef__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getRightAssignment_2_2()); }
(rule__StmtSetOrCallOrVarDef__RightAssignment_2_2)
{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getRightAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OpAssignment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAssignment__Group_0__0__Impl
	rule__OpAssignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssignment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAssignmentAccess().getOpAssignAction_0_0()); }
(

)
{ after(grammarAccess.getOpAssignmentAccess().getOpAssignAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpAssignment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAssignment__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssignment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAssignmentAccess().getEqualsSignKeyword_0_1()); }

	'=' 

{ after(grammarAccess.getOpAssignmentAccess().getEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpAssignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAssignment__Group_1__0__Impl
	rule__OpAssignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAssignmentAccess().getOpPlusAssignAction_1_0()); }
(

)
{ after(grammarAccess.getOpAssignmentAccess().getOpPlusAssignAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpAssignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAssignment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAssignmentAccess().getPlusSignEqualsSignKeyword_1_1()); }

	'+=' 

{ after(grammarAccess.getOpAssignmentAccess().getPlusSignEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpAssignment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAssignment__Group_2__0__Impl
	rule__OpAssignment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssignment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAssignmentAccess().getOpMinusAssignAction_2_0()); }
(

)
{ after(grammarAccess.getOpAssignmentAccess().getOpMinusAssignAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpAssignment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAssignment__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAssignment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAssignmentAccess().getHyphenMinusEqualsSignKeyword_2_1()); }

	'-=' 

{ after(grammarAccess.getOpAssignmentAccess().getHyphenMinusEqualsSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprOr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group__0__Impl
	rule__ExprOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getExprAndParserRuleCall_0()); }
	ruleExprAnd
{ after(grammarAccess.getExprOrAccess().getExprAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getGroup_1()); }
(rule__ExprOr__Group_1__0)*
{ after(grammarAccess.getExprOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprOr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group_1__0__Impl
	rule__ExprOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getExprOrLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprOrAccess().getExprOrLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group_1__1__Impl
	rule__ExprOr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getOpAssignment_1_1()); }
(rule__ExprOr__OpAssignment_1_1)
{ after(grammarAccess.getExprOrAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprOr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprOr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getRightAssignment_1_2()); }
(rule__ExprOr__RightAssignment_1_2)
{ after(grammarAccess.getExprOrAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprAnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group__0__Impl
	rule__ExprAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprEqualityParserRuleCall_0()); }
	ruleExprEquality
{ after(grammarAccess.getExprAndAccess().getExprEqualityParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getGroup_1()); }
(rule__ExprAnd__Group_1__0)*
{ after(grammarAccess.getExprAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprAnd__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group_1__0__Impl
	rule__ExprAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getExprAndLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprAndAccess().getExprAndLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group_1__1__Impl
	rule__ExprAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getOpAssignment_1_1()); }
(rule__ExprAnd__OpAssignment_1_1)
{ after(grammarAccess.getExprAndAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAnd__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAnd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getRightAssignment_1_2()); }
(rule__ExprAnd__RightAssignment_1_2)
{ after(grammarAccess.getExprAndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprEquality__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEquality__Group__0__Impl
	rule__ExprEquality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEquality__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualityAccess().getExprComparisonParserRuleCall_0()); }
	ruleExprComparison
{ after(grammarAccess.getExprEqualityAccess().getExprComparisonParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEquality__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEquality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEquality__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualityAccess().getGroup_1()); }
(rule__ExprEquality__Group_1__0)*
{ after(grammarAccess.getExprEqualityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprEquality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEquality__Group_1__0__Impl
	rule__ExprEquality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEquality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualityAccess().getExprEqualityLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprEqualityAccess().getExprEqualityLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEquality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEquality__Group_1__1__Impl
	rule__ExprEquality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEquality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualityAccess().getOpAssignment_1_1()); }
(rule__ExprEquality__OpAssignment_1_1)
{ after(grammarAccess.getExprEqualityAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprEquality__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprEquality__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEquality__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualityAccess().getRightAssignment_1_2()); }
(rule__ExprEquality__RightAssignment_1_2)
{ after(grammarAccess.getExprEqualityAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OpEquality__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpEquality__Group_0__0__Impl
	rule__OpEquality__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getOpEqualsAction_0_0()); }
(

)
{ after(grammarAccess.getOpEqualityAccess().getOpEqualsAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpEquality__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpEquality__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0_1()); }

	'==' 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpEquality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpEquality__Group_1__0__Impl
	rule__OpEquality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getOpUnequalsAction_1_0()); }
(

)
{ after(grammarAccess.getOpEqualityAccess().getOpUnequalsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpEquality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpEquality__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1_1()); }

	'!=' 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprComparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprComparison__Group__0__Impl
	rule__ExprComparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprComparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprComparisonAccess().getExprAdditiveParserRuleCall_0()); }
	ruleExprAdditive
{ after(grammarAccess.getExprComparisonAccess().getExprAdditiveParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprComparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprComparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprComparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprComparisonAccess().getGroup_1()); }
(rule__ExprComparison__Group_1__0)*
{ after(grammarAccess.getExprComparisonAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprComparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprComparison__Group_1__0__Impl
	rule__ExprComparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprComparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprComparisonAccess().getExprComparisonLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprComparisonAccess().getExprComparisonLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprComparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprComparison__Group_1__1__Impl
	rule__ExprComparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprComparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprComparisonAccess().getOpAssignment_1_1()); }
(rule__ExprComparison__OpAssignment_1_1)
{ after(grammarAccess.getExprComparisonAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprComparison__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprComparison__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprComparison__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprComparisonAccess().getRightAssignment_1_2()); }
(rule__ExprComparison__RightAssignment_1_2)
{ after(grammarAccess.getExprComparisonAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OpComparison__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpComparison__Group_0__0__Impl
	rule__OpComparison__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComparison__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpComparisonAccess().getOpLessEqAction_0_0()); }
(

)
{ after(grammarAccess.getOpComparisonAccess().getOpLessEqAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpComparison__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpComparison__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComparison__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpComparisonAccess().getLessThanSignEqualsSignKeyword_0_1()); }

	'<=' 

{ after(grammarAccess.getOpComparisonAccess().getLessThanSignEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpComparison__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpComparison__Group_1__0__Impl
	rule__OpComparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComparison__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpComparisonAccess().getOpLessAction_1_0()); }
(

)
{ after(grammarAccess.getOpComparisonAccess().getOpLessAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpComparison__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpComparison__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComparison__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpComparisonAccess().getLessThanSignKeyword_1_1()); }

	'<' 

{ after(grammarAccess.getOpComparisonAccess().getLessThanSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpComparison__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpComparison__Group_2__0__Impl
	rule__OpComparison__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComparison__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpComparisonAccess().getOpGreaterEqAction_2_0()); }
(

)
{ after(grammarAccess.getOpComparisonAccess().getOpGreaterEqAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpComparison__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpComparison__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComparison__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpComparisonAccess().getGreaterThanSignEqualsSignKeyword_2_1()); }

	'>=' 

{ after(grammarAccess.getOpComparisonAccess().getGreaterThanSignEqualsSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpComparison__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpComparison__Group_3__0__Impl
	rule__OpComparison__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComparison__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpComparisonAccess().getOpGreaterAction_3_0()); }
(

)
{ after(grammarAccess.getOpComparisonAccess().getOpGreaterAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpComparison__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpComparison__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpComparison__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpComparisonAccess().getGreaterThanSignKeyword_3_1()); }

	'>' 

{ after(grammarAccess.getOpComparisonAccess().getGreaterThanSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprAdditive__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdditive__Group__0__Impl
	rule__ExprAdditive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdditive__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAdditiveAccess().getExprMultParserRuleCall_0()); }
	ruleExprMult
{ after(grammarAccess.getExprAdditiveAccess().getExprMultParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAdditive__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdditive__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdditive__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAdditiveAccess().getGroup_1()); }
(rule__ExprAdditive__Group_1__0)*
{ after(grammarAccess.getExprAdditiveAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprAdditive__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdditive__Group_1__0__Impl
	rule__ExprAdditive__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdditive__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAdditiveAccess().getExprAdditiveLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprAdditiveAccess().getExprAdditiveLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAdditive__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdditive__Group_1__1__Impl
	rule__ExprAdditive__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdditive__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAdditiveAccess().getOpAssignment_1_1()); }
(rule__ExprAdditive__OpAssignment_1_1)
{ after(grammarAccess.getExprAdditiveAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAdditive__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAdditive__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdditive__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAdditiveAccess().getRightAssignment_1_2()); }
(rule__ExprAdditive__RightAssignment_1_2)
{ after(grammarAccess.getExprAdditiveAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OpAdditive__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAdditive__Group_0__0__Impl
	rule__OpAdditive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdditive__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAdditiveAccess().getOpPlusAction_0_0()); }
(

)
{ after(grammarAccess.getOpAdditiveAccess().getOpPlusAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpAdditive__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAdditive__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdditive__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAdditiveAccess().getPlusSignKeyword_0_1()); }

	'+' 

{ after(grammarAccess.getOpAdditiveAccess().getPlusSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpAdditive__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAdditive__Group_1__0__Impl
	rule__OpAdditive__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdditive__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAdditiveAccess().getOpMinusAction_1_0()); }
(

)
{ after(grammarAccess.getOpAdditiveAccess().getOpMinusAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpAdditive__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpAdditive__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdditive__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAdditiveAccess().getHyphenMinusKeyword_1_1()); }

	'-' 

{ after(grammarAccess.getOpAdditiveAccess().getHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprMult__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group__0__Impl
	rule__ExprMult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getExprSignParserRuleCall_0()); }
	ruleExprSign
{ after(grammarAccess.getExprMultAccess().getExprSignParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMult__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getGroup_1()); }
(rule__ExprMult__Group_1__0)*
{ after(grammarAccess.getExprMultAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprMult__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group_1__0__Impl
	rule__ExprMult__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getExprMultLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprMultAccess().getExprMultLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMult__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group_1__1__Impl
	rule__ExprMult__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getOpAssignment_1_1()); }
(rule__ExprMult__OpAssignment_1_1)
{ after(grammarAccess.getExprMultAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMult__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMult__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getRightAssignment_1_2()); }
(rule__ExprMult__RightAssignment_1_2)
{ after(grammarAccess.getExprMultAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OpMultiplicative__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_0__0__Impl
	rule__OpMultiplicative__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getOpMultAction_0_0()); }
(

)
{ after(grammarAccess.getOpMultiplicativeAccess().getOpMultAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiplicative__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getAsteriskKeyword_0_1()); }

	'*' 

{ after(grammarAccess.getOpMultiplicativeAccess().getAsteriskKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpMultiplicative__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_1__0__Impl
	rule__OpMultiplicative__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getOpDivRealAction_1_0()); }
(

)
{ after(grammarAccess.getOpMultiplicativeAccess().getOpDivRealAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiplicative__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getSolidusKeyword_1_1()); }

	'/' 

{ after(grammarAccess.getOpMultiplicativeAccess().getSolidusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpMultiplicative__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_2__0__Impl
	rule__OpMultiplicative__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getOpModRealAction_2_0()); }
(

)
{ after(grammarAccess.getOpMultiplicativeAccess().getOpModRealAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiplicative__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getPercentSignKeyword_2_1()); }

	'%' 

{ after(grammarAccess.getOpMultiplicativeAccess().getPercentSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpMultiplicative__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_3__0__Impl
	rule__OpMultiplicative__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getOpModIntAction_3_0()); }
(

)
{ after(grammarAccess.getOpMultiplicativeAccess().getOpModIntAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiplicative__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getModKeyword_3_1()); }

	'mod' 

{ after(grammarAccess.getOpMultiplicativeAccess().getModKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpMultiplicative__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_4__0__Impl
	rule__OpMultiplicative__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getOpDivIntAction_4_0()); }
(

)
{ after(grammarAccess.getOpMultiplicativeAccess().getOpDivIntAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiplicative__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiplicative__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getDivKeyword_4_1()); }

	'div' 

{ after(grammarAccess.getOpMultiplicativeAccess().getDivKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprSign__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSign__Group_0__0__Impl
	rule__ExprSign__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSign__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSignAccess().getExprSignAction_0_0()); }
(

)
{ after(grammarAccess.getExprSignAccess().getExprSignAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSign__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSign__Group_0__1__Impl
	rule__ExprSign__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSign__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSignAccess().getOpAssignment_0_1()); }
(rule__ExprSign__OpAssignment_0_1)
{ after(grammarAccess.getExprSignAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSign__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSign__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSign__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSignAccess().getRightAssignment_0_2()); }
(rule__ExprSign__RightAssignment_0_2)
{ after(grammarAccess.getExprSignAccess().getRightAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprNot__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprNot__Group_0__0__Impl
	rule__ExprNot__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprNotAccess().getExprNotAction_0_0()); }
(

)
{ after(grammarAccess.getExprNotAccess().getExprNotAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprNot__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprNot__Group_0__1__Impl
	rule__ExprNot__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprNotAccess().getNotKeyword_0_1()); }

	'not' 

{ after(grammarAccess.getExprNotAccess().getNotKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprNot__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprNot__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprNotAccess().getRightAssignment_0_2()); }
(rule__ExprNot__RightAssignment_0_2)
{ after(grammarAccess.getExprNotAccess().getRightAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMember__Group__0__Impl
	rule__ExprMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberAccess().getExprSingleParserRuleCall_0()); }
	ruleExprSingle
{ after(grammarAccess.getExprMemberAccess().getExprSingleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberAccess().getGroup_1()); }
(rule__ExprMember__Group_1__0)*
{ after(grammarAccess.getExprMemberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprMember__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMember__Group_1__0__Impl
	rule__ExprMember__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMember__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberAccess().getExprMemberLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExprMemberAccess().getExprMemberLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMember__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMember__Group_1__1__Impl
	rule__ExprMember__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMember__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getExprMemberAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMember__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMember__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMember__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberAccess().getMessageAssignment_1_2()); }
(rule__ExprMember__MessageAssignment_1_2)
{ after(grammarAccess.getExprMemberAccess().getMessageAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprMemberRight__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMemberRight__Group__0__Impl
	rule__ExprMemberRight__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getNameValAssignment_0()); }
(rule__ExprMemberRight__NameValAssignment_0)
{ after(grammarAccess.getExprMemberRightAccess().getNameValAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMemberRight__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMemberRight__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getGroup_1()); }
(rule__ExprMemberRight__Group_1__0)?
{ after(grammarAccess.getExprMemberRightAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprMemberRight__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMemberRight__Group_1__0__Impl
	rule__ExprMemberRight__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getExprMemberRightAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMemberRight__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMemberRight__Group_1__1__Impl
	rule__ExprMemberRight__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getGroup_1_1()); }
(rule__ExprMemberRight__Group_1_1__0)?
{ after(grammarAccess.getExprMemberRightAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMemberRight__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMemberRight__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getExprMemberRightAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprMemberRight__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMemberRight__Group_1_1__0__Impl
	rule__ExprMemberRight__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getParamsAssignment_1_1_0()); }
(rule__ExprMemberRight__ParamsAssignment_1_1_0)
{ after(grammarAccess.getExprMemberRightAccess().getParamsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMemberRight__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMemberRight__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getGroup_1_1_1()); }
(rule__ExprMemberRight__Group_1_1_1__0)*
{ after(grammarAccess.getExprMemberRightAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprMemberRight__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMemberRight__Group_1_1_1__0__Impl
	rule__ExprMemberRight__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getExprMemberRightAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprMemberRight__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprMemberRight__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getParamsAssignment_1_1_1_1()); }
(rule__ExprMemberRight__ParamsAssignment_1_1_1_1)
{ after(grammarAccess.getExprMemberRightAccess().getParamsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprSingle__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_1__0__Impl
	rule__ExprSingle__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getExprSingleAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSingle__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_1__1__Impl
	rule__ExprSingle__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getExprParserRuleCall_1_1()); }
	ruleExpr
{ after(grammarAccess.getExprSingleAccess().getExprParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSingle__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getExprSingleAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprSingle__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_2__0__Impl
	rule__ExprSingle__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getExprIntValAction_2_0()); }
(

)
{ after(grammarAccess.getExprSingleAccess().getExprIntValAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSingle__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getIntValAssignment_2_1()); }
(rule__ExprSingle__IntValAssignment_2_1)
{ after(grammarAccess.getExprSingleAccess().getIntValAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprSingle__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_3__0__Impl
	rule__ExprSingle__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getExprNumValAction_3_0()); }
(

)
{ after(grammarAccess.getExprSingleAccess().getExprNumValAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSingle__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getNumValAssignment_3_1()); }
(rule__ExprSingle__NumValAssignment_3_1)
{ after(grammarAccess.getExprSingleAccess().getNumValAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprSingle__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_4__0__Impl
	rule__ExprSingle__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getExprStrvalAction_4_0()); }
(

)
{ after(grammarAccess.getExprSingleAccess().getExprStrvalAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSingle__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getStrValAssignment_4_1()); }
(rule__ExprSingle__StrValAssignment_4_1)
{ after(grammarAccess.getExprSingleAccess().getStrValAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprSingle__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_5__0__Impl
	rule__ExprSingle__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getExprBoolValAction_5_0()); }
(

)
{ after(grammarAccess.getExprSingleAccess().getExprBoolValAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSingle__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getBoolValAssignment_5_1()); }
(rule__ExprSingle__BoolValAssignment_5_1)
{ after(grammarAccess.getExprSingleAccess().getBoolValAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprSingle__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_6__0__Impl
	rule__ExprSingle__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getExprFuncRefAction_6_0()); }
(

)
{ after(grammarAccess.getExprSingleAccess().getExprFuncRefAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSingle__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_6__1__Impl
	rule__ExprSingle__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getFunctionKeyword_6_1()); }

	'function' 

{ after(grammarAccess.getExprSingleAccess().getFunctionKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprSingle__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprSingle__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getNameValAssignment_6_2()); }
(rule__ExprSingle__NameValAssignment_6_2)
{ after(grammarAccess.getExprSingleAccess().getNameValAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Number__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__1__Impl
	rule__Number__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprAtomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_1__0__Impl
	rule__ExprAtomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getExprIdentifierAction_1_0()); }
(

)
{ after(grammarAccess.getExprAtomicAccess().getExprIdentifierAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_1__1__Impl
	rule__ExprAtomic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getNameValAssignment_1_1()); }
(rule__ExprAtomic__NameValAssignment_1_1)
{ after(grammarAccess.getExprAtomicAccess().getNameValAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getGroup_1_2()); }
(rule__ExprAtomic__Group_1_2__0)*
{ after(grammarAccess.getExprAtomicAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprAtomic__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_1_2__0__Impl
	rule__ExprAtomic__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getLeftSquareBracketKeyword_1_2_0()); }

	'[' 

{ after(grammarAccess.getExprAtomicAccess().getLeftSquareBracketKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_1_2__1__Impl
	rule__ExprAtomic__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getArrayIndizesAssignment_1_2_1()); }
(rule__ExprAtomic__ArrayIndizesAssignment_1_2_1)
{ after(grammarAccess.getExprAtomicAccess().getArrayIndizesAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getRightSquareBracketKeyword_1_2_2()); }

	']' 

{ after(grammarAccess.getExprAtomicAccess().getRightSquareBracketKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprAtomic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2__0__Impl
	rule__ExprAtomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getExprNewObjectAction_2_0()); }
(

)
{ after(grammarAccess.getExprAtomicAccess().getExprNewObjectAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2__1__Impl
	rule__ExprAtomic__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getNewKeyword_2_1()); }

	'new' 

{ after(grammarAccess.getExprAtomicAccess().getNewKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2__2__Impl
	rule__ExprAtomic__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getClassDefAssignment_2_2()); }
(rule__ExprAtomic__ClassDefAssignment_2_2)
{ after(grammarAccess.getExprAtomicAccess().getClassDefAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2__3__Impl
	rule__ExprAtomic__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getLeftParenthesisKeyword_2_3()); }

	'(' 

{ after(grammarAccess.getExprAtomicAccess().getLeftParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2__4__Impl
	rule__ExprAtomic__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getGroup_2_4()); }
(rule__ExprAtomic__Group_2_4__0)?
{ after(grammarAccess.getExprAtomicAccess().getGroup_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getRightParenthesisKeyword_2_5()); }

	')' 

{ after(grammarAccess.getExprAtomicAccess().getRightParenthesisKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExprAtomic__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2_4__0__Impl
	rule__ExprAtomic__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getParamsAssignment_2_4_0()); }
(rule__ExprAtomic__ParamsAssignment_2_4_0)
{ after(grammarAccess.getExprAtomicAccess().getParamsAssignment_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getGroup_2_4_1()); }
(rule__ExprAtomic__Group_2_4_1__0)*
{ after(grammarAccess.getExprAtomicAccess().getGroup_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprAtomic__Group_2_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2_4_1__0__Impl
	rule__ExprAtomic__Group_2_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getCommaKeyword_2_4_1_0()); }

	',' 

{ after(grammarAccess.getExprAtomicAccess().getCommaKeyword_2_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_2_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_2_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_2_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getParamsAssignment_2_4_1_1()); }
(rule__ExprAtomic__ParamsAssignment_2_4_1_1)
{ after(grammarAccess.getExprAtomicAccess().getParamsAssignment_2_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprAtomic__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_3__0__Impl
	rule__ExprAtomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getExprThisAction_3_0()); }
(

)
{ after(grammarAccess.getExprAtomicAccess().getExprThisAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprAtomic__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprAtomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getThisKeyword_3_1()); }

	'this' 

{ after(grammarAccess.getExprAtomicAccess().getThisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprFunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprFunctionCall__Group__0__Impl
	rule__ExprFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getExprFunctioncallAction_0()); }
(

)
{ after(grammarAccess.getExprFunctionCallAccess().getExprFunctioncallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprFunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprFunctionCall__Group__1__Impl
	rule__ExprFunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getNameValAssignment_1()); }
(rule__ExprFunctionCall__NameValAssignment_1)
{ after(grammarAccess.getExprFunctionCallAccess().getNameValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprFunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprFunctionCall__Group__2__Impl
	rule__ExprFunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getExprFunctionCallAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprFunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprFunctionCall__Group__3__Impl
	rule__ExprFunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getGroup_3()); }
(rule__ExprFunctionCall__Group_3__0)?
{ after(grammarAccess.getExprFunctionCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprFunctionCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprFunctionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getExprFunctionCallAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExprFunctionCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprFunctionCall__Group_3__0__Impl
	rule__ExprFunctionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getParamsAssignment_3_0()); }
(rule__ExprFunctionCall__ParamsAssignment_3_0)
{ after(grammarAccess.getExprFunctionCallAccess().getParamsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprFunctionCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprFunctionCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getGroup_3_1()); }
(rule__ExprFunctionCall__Group_3_1__0)*
{ after(grammarAccess.getExprFunctionCallAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExprFunctionCall__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprFunctionCall__Group_3_1__0__Impl
	rule__ExprFunctionCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getExprFunctionCallAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprFunctionCall__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprFunctionCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getParamsAssignment_3_1_1()); }
(rule__ExprFunctionCall__ParamsAssignment_3_1_1)
{ after(grammarAccess.getExprFunctionCallAccess().getParamsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Program__PackagesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getPackagesPackageDeclarationParserRuleCall_1_0()); }
	rulePackageDeclaration{ after(grammarAccess.getProgramAccess().getPackagesPackageDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__PackagesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getPackagesPackageDeclarationParserRuleCall_2_0()); }
	rulePackageDeclaration{ after(grammarAccess.getProgramAccess().getPackagesPackageDeclarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPackageDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ImportsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getImportsImportParserRuleCall_5_1_0()); }
	ruleImport{ after(grammarAccess.getPackageDeclarationAccess().getImportsImportParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElementsAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElementsEntityParserRuleCall_7_0_0()); }
	ruleEntity{ after(grammarAccess.getPackageDeclarationAccess().getElementsEntityParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceImportStringParserRuleCall_1_0()); }
	ruleImportString{ after(grammarAccess.getImportAccess().getImportedNamespaceImportStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitBlock__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBlockAccess().getNameInitKeyword_0_0()); }
(
{ before(grammarAccess.getInitBlockAccess().getNameInitKeyword_0_0()); }

	'init' 

{ after(grammarAccess.getInitBlockAccess().getNameInitKeyword_0_0()); }
)

{ after(grammarAccess.getInitBlockAccess().getNameInitKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitBlock__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitBlockAccess().getBodyStatementsParserRuleCall_3_0()); }
	ruleStatements{ after(grammarAccess.getInitBlockAccess().getBodyStatementsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getNativeFuncAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__ParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getParametersParameterDefParserRuleCall_4_0_0()); }
	ruleParameterDef{ after(grammarAccess.getNativeFuncAccess().getParametersParameterDefParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__ParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getParametersParameterDefParserRuleCall_4_1_1_0()); }
	ruleParameterDef{ after(grammarAccess.getNativeFuncAccess().getParametersParameterDefParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFunc__TypeAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFuncAccess().getTypeTypeExprParserRuleCall_6_1_0()); }
	ruleTypeExpr{ after(grammarAccess.getNativeFuncAccess().getTypeTypeExprParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getNativeTypeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeType__SuperNameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeTypeAccess().getSuperNameTypeExprParserRuleCall_3_1_0()); }
	ruleTypeExpr{ after(grammarAccess.getNativeTypeAccess().getSuperNameTypeExprParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__UnmanagedAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getUnmanagedUnmanagedKeyword_1_0()); }
(
{ before(grammarAccess.getClassDefAccess().getUnmanagedUnmanagedKeyword_1_0()); }

	'unmanaged' 

{ after(grammarAccess.getClassDefAccess().getUnmanagedUnmanagedKeyword_1_0()); }
)

{ after(grammarAccess.getClassDefAccess().getUnmanagedUnmanagedKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getClassDefAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDef__MembersAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefAccess().getMembersClassSlotsParserRuleCall_6_1_0()); }
	ruleClassSlots{ after(grammarAccess.getClassDefAccess().getMembersClassSlotsParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__ConstantAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getConstantValKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getVarDefAccess().getConstantValKeyword_1_0_0_0()); }

	'val' 

{ after(grammarAccess.getVarDefAccess().getConstantValKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getVarDefAccess().getConstantValKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__TypeAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getTypeTypeExprParserRuleCall_1_0_1_0()); }
	ruleTypeExpr{ after(grammarAccess.getVarDefAccess().getTypeTypeExprParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__NameAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getNameIDTerminalRuleCall_1_0_2_0()); }
	RULE_ID{ after(grammarAccess.getVarDefAccess().getNameIDTerminalRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__EAssignment_1_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getEExprParserRuleCall_1_0_4_0()); }
	ruleExpr{ after(grammarAccess.getVarDefAccess().getEExprParserRuleCall_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__TypeAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getTypeTypeExprParserRuleCall_1_1_0_0()); }
	ruleTypeExpr{ after(grammarAccess.getVarDefAccess().getTypeTypeExprParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__NameAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getVarDefAccess().getNameIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__EAssignment_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getEExprParserRuleCall_1_1_2_1_0()); }
	ruleExpr{ after(grammarAccess.getVarDefAccess().getEExprParserRuleCall_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getNameTypeDefCrossReference_0_0()); }
(
{ before(grammarAccess.getTypeExprAccess().getNameTypeDefIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeExprAccess().getNameTypeDefIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTypeExprAccess().getNameTypeDefCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__ArrayAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getArrayArrayKeyword_1_0_0()); }
(
{ before(grammarAccess.getTypeExprAccess().getArrayArrayKeyword_1_0_0()); }

	'array' 

{ after(grammarAccess.getTypeExprAccess().getArrayArrayKeyword_1_0_0()); }
)

{ after(grammarAccess.getTypeExprAccess().getArrayArrayKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExpr__SizesAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeExprAccess().getSizesINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT{ after(grammarAccess.getTypeExprAccess().getSizesINTTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__ParametersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getParametersParameterDefParserRuleCall_2_0_0()); }
	ruleParameterDef{ after(grammarAccess.getConstructorDefAccess().getParametersParameterDefParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__ParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getParametersParameterDefParserRuleCall_2_1_1_0()); }
	ruleParameterDef{ after(grammarAccess.getConstructorDefAccess().getParametersParameterDefParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDef__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorDefAccess().getBodyStatementsParserRuleCall_6_0()); }
	ruleStatements{ after(grammarAccess.getConstructorDefAccess().getBodyStatementsParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OnDestroyDef__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnDestroyDefAccess().getBodyStatementsParserRuleCall_3_0()); }
	ruleStatements{ after(grammarAccess.getOnDestroyDefAccess().getBodyStatementsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFuncDefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__ParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getParametersParameterDefParserRuleCall_3_0_0()); }
	ruleParameterDef{ after(grammarAccess.getFuncDefAccess().getParametersParameterDefParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__ParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getParametersParameterDefParserRuleCall_3_1_1_0()); }
	ruleParameterDef{ after(grammarAccess.getFuncDefAccess().getParametersParameterDefParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__TypeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getTypeTypeExprParserRuleCall_5_1_0()); }
	ruleTypeExpr{ after(grammarAccess.getFuncDefAccess().getTypeTypeExprParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FuncDef__BodyAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFuncDefAccess().getBodyStatementsParserRuleCall_8_0()); }
	ruleStatements{ after(grammarAccess.getFuncDefAccess().getBodyStatementsParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDef__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefAccess().getTypeTypeExprParserRuleCall_1_0()); }
	ruleTypeExpr{ after(grammarAccess.getParameterDefAccess().getTypeTypeExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDef__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getParameterDefAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statements__StatementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_1_1_0()); }
	ruleStatement{ after(grammarAccess.getStatementsAccess().getStatementsStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtChangeRefCount__IncreaseAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getIncreaseIncrefKeyword_0_0_0()); }
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getIncreaseIncrefKeyword_0_0_0()); }

	'incref' 

{ after(grammarAccess.getStmtChangeRefCountAccess().getIncreaseIncrefKeyword_0_0_0()); }
)

{ after(grammarAccess.getStmtChangeRefCountAccess().getIncreaseIncrefKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtChangeRefCount__DecreaseAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getDecreaseDecrefKeyword_0_1_0()); }
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getDecreaseDecrefKeyword_0_1_0()); }

	'decref' 

{ after(grammarAccess.getStmtChangeRefCountAccess().getDecreaseDecrefKeyword_0_1_0()); }
)

{ after(grammarAccess.getStmtChangeRefCountAccess().getDecreaseDecrefKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtChangeRefCount__ObjAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtChangeRefCountAccess().getObjExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getStmtChangeRefCountAccess().getObjExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtDestroy__ObjAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtDestroyAccess().getObjExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getStmtDestroyAccess().getObjExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtReturn__EAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtReturnAccess().getEExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getStmtReturnAccess().getEExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__CondAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getCondExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getStmtIfAccess().getCondExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__ThenBlockAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getThenBlockStatementsParserRuleCall_4_0()); }
	ruleStatements{ after(grammarAccess.getStmtIfAccess().getThenBlockStatementsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtIf__ElseBlockAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtIfAccess().getElseBlockStatementsParserRuleCall_6_3_0()); }
	ruleStatements{ after(grammarAccess.getStmtIfAccess().getElseBlockStatementsParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWhile__CondAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWhileAccess().getCondExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getStmtWhileAccess().getCondExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtWhile__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtWhileAccess().getBodyStatementsParserRuleCall_4_0()); }
	ruleStatements{ after(grammarAccess.getStmtWhileAccess().getBodyStatementsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__ConstantAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getConstantValKeyword_0_1_0()); }
(
{ before(grammarAccess.getLocalVarDefAccess().getConstantValKeyword_0_1_0()); }

	'val' 

{ after(grammarAccess.getLocalVarDefAccess().getConstantValKeyword_0_1_0()); }
)

{ after(grammarAccess.getLocalVarDefAccess().getConstantValKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__TypeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getTypeTypeExprParserRuleCall_0_2_0()); }
	ruleTypeExpr{ after(grammarAccess.getLocalVarDefAccess().getTypeTypeExprParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__NameAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getNameIDTerminalRuleCall_0_3_0()); }
	RULE_ID{ after(grammarAccess.getLocalVarDefAccess().getNameIDTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__EAssignment_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getEExprParserRuleCall_0_4_1_0()); }
	ruleExpr{ after(grammarAccess.getLocalVarDefAccess().getEExprParserRuleCall_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getTypeTypeExprParserRuleCall_1_1_0()); }
	ruleTypeExpr{ after(grammarAccess.getLocalVarDefAccess().getTypeTypeExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__NameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getNameIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getLocalVarDefAccess().getNameIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDef__EAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDefAccess().getEExprParserRuleCall_1_3_1_0()); }
	ruleExpr{ after(grammarAccess.getLocalVarDefAccess().getEExprParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__EAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getEExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getEExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__OpAssignmentAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getOpAssignmentOpAssignmentParserRuleCall_2_1_0()); }
	ruleOpAssignment{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getOpAssignmentOpAssignmentParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StmtSetOrCallOrVarDef__RightAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtSetOrCallOrVarDefAccess().getRightExprParserRuleCall_2_2_0()); }
	ruleExpr{ after(grammarAccess.getStmtSetOrCallOrVarDefAccess().getRightExprParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getOpOrKeyword_1_1_0()); }
(
{ before(grammarAccess.getExprOrAccess().getOpOrKeyword_1_1_0()); }

	'or' 

{ after(grammarAccess.getExprOrAccess().getOpOrKeyword_1_1_0()); }
)

{ after(grammarAccess.getExprOrAccess().getOpOrKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOr__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrAccess().getRightExprAndParserRuleCall_1_2_0()); }
	ruleExprAnd{ after(grammarAccess.getExprOrAccess().getRightExprAndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getOpAndKeyword_1_1_0()); }
(
{ before(grammarAccess.getExprAndAccess().getOpAndKeyword_1_1_0()); }

	'and' 

{ after(grammarAccess.getExprAndAccess().getOpAndKeyword_1_1_0()); }
)

{ after(grammarAccess.getExprAndAccess().getOpAndKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAnd__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAndAccess().getRightExprEqualityParserRuleCall_1_2_0()); }
	ruleExprEquality{ after(grammarAccess.getExprAndAccess().getRightExprEqualityParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEquality__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualityAccess().getOpOpEqualityParserRuleCall_1_1_0()); }
	ruleOpEquality{ after(grammarAccess.getExprEqualityAccess().getOpOpEqualityParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprEquality__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprEqualityAccess().getRightExprComparisonParserRuleCall_1_2_0()); }
	ruleExprComparison{ after(grammarAccess.getExprEqualityAccess().getRightExprComparisonParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprComparison__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprComparisonAccess().getOpOpComparisonParserRuleCall_1_1_0()); }
	ruleOpComparison{ after(grammarAccess.getExprComparisonAccess().getOpOpComparisonParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprComparison__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprComparisonAccess().getRightExprAdditiveParserRuleCall_1_2_0()); }
	ruleExprAdditive{ after(grammarAccess.getExprComparisonAccess().getRightExprAdditiveParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdditive__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAdditiveAccess().getOpOpAdditiveParserRuleCall_1_1_0()); }
	ruleOpAdditive{ after(grammarAccess.getExprAdditiveAccess().getOpOpAdditiveParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAdditive__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAdditiveAccess().getRightExprMultParserRuleCall_1_2_0()); }
	ruleExprMult{ after(grammarAccess.getExprAdditiveAccess().getRightExprMultParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getOpOpMultiplicativeParserRuleCall_1_1_0()); }
	ruleOpMultiplicative{ after(grammarAccess.getExprMultAccess().getOpOpMultiplicativeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMult__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMultAccess().getRightExprSignParserRuleCall_1_2_0()); }
	ruleExprSign{ after(grammarAccess.getExprMultAccess().getRightExprSignParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSign__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSignAccess().getOpOpAdditiveParserRuleCall_0_1_0()); }
	ruleOpAdditive{ after(grammarAccess.getExprSignAccess().getOpOpAdditiveParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSign__RightAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSignAccess().getRightExprNotParserRuleCall_0_2_0()); }
	ruleExprNot{ after(grammarAccess.getExprSignAccess().getRightExprNotParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprNot__RightAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprNotAccess().getRightExprMemberParserRuleCall_0_2_0()); }
	ruleExprMember{ after(grammarAccess.getExprNotAccess().getRightExprMemberParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMember__MessageAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberAccess().getMessageExprMemberRightParserRuleCall_1_2_0()); }
	ruleExprMemberRight{ after(grammarAccess.getExprMemberAccess().getMessageExprMemberRightParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__NameValAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getNameValClassMemberCrossReference_0_0()); }
(
{ before(grammarAccess.getExprMemberRightAccess().getNameValClassMemberIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getExprMemberRightAccess().getNameValClassMemberIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getExprMemberRightAccess().getNameValClassMemberCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__ParamsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getParamsExprParserRuleCall_1_1_0_0()); }
	ruleExpr{ after(grammarAccess.getExprMemberRightAccess().getParamsExprParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprMemberRight__ParamsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprMemberRightAccess().getParamsExprParserRuleCall_1_1_1_1_0()); }
	ruleExpr{ after(grammarAccess.getExprMemberRightAccess().getParamsExprParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__IntValAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getIntValINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getExprSingleAccess().getIntValINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__NumValAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getNumValNumberParserRuleCall_3_1_0()); }
	ruleNumber{ after(grammarAccess.getExprSingleAccess().getNumValNumberParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__StrValAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getStrValSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getExprSingleAccess().getStrValSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__BoolValAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getBoolValAlternatives_5_1_0()); }
(rule__ExprSingle__BoolValAlternatives_5_1_0)
{ after(grammarAccess.getExprSingleAccess().getBoolValAlternatives_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprSingle__NameValAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprSingleAccess().getNameValFuncDefCrossReference_6_2_0()); }
(
{ before(grammarAccess.getExprSingleAccess().getNameValFuncDefIDTerminalRuleCall_6_2_0_1()); }
	RULE_ID{ after(grammarAccess.getExprSingleAccess().getNameValFuncDefIDTerminalRuleCall_6_2_0_1()); }
)
{ after(grammarAccess.getExprSingleAccess().getNameValFuncDefCrossReference_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__NameValAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getNameValVarDefCrossReference_1_1_0()); }
(
{ before(grammarAccess.getExprAtomicAccess().getNameValVarDefIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExprAtomicAccess().getNameValVarDefIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getExprAtomicAccess().getNameValVarDefCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__ArrayIndizesAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getArrayIndizesExprParserRuleCall_1_2_1_0()); }
	ruleExpr{ after(grammarAccess.getExprAtomicAccess().getArrayIndizesExprParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__ClassDefAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getClassDefClassDefCrossReference_2_2_0()); }
(
{ before(grammarAccess.getExprAtomicAccess().getClassDefClassDefIDTerminalRuleCall_2_2_0_1()); }
	RULE_ID{ after(grammarAccess.getExprAtomicAccess().getClassDefClassDefIDTerminalRuleCall_2_2_0_1()); }
)
{ after(grammarAccess.getExprAtomicAccess().getClassDefClassDefCrossReference_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__ParamsAssignment_2_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getParamsExprParserRuleCall_2_4_0_0()); }
	ruleExpr{ after(grammarAccess.getExprAtomicAccess().getParamsExprParserRuleCall_2_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprAtomic__ParamsAssignment_2_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAtomicAccess().getParamsExprParserRuleCall_2_4_1_1_0()); }
	ruleExpr{ after(grammarAccess.getExprAtomicAccess().getParamsExprParserRuleCall_2_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__NameValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getNameValFuncDefCrossReference_1_0()); }
(
{ before(grammarAccess.getExprFunctionCallAccess().getNameValFuncDefIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExprFunctionCallAccess().getNameValFuncDefIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getExprFunctionCallAccess().getNameValFuncDefCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__ParamsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getParamsExprParserRuleCall_3_0_0()); }
	ruleExpr{ after(grammarAccess.getExprFunctionCallAccess().getParamsExprParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprFunctionCall__ParamsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprFunctionCallAccess().getParamsExprParserRuleCall_3_1_1_0()); }
	ruleExpr{ after(grammarAccess.getExprFunctionCallAccess().getParamsExprParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/' (' '|'\t'|'\n'|'\r')*;

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : ('\\\n\r'|'\\\n'|'\\\r'|'\\\r\n'|' '|'\t')+;

RULE_NL : ('\n\r'|'\n'|'\r'|'\r\n');

RULE_ANY_OTHER : .;


