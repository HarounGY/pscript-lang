/*
 * generated by Xtext
 */
package de.peeeq.pscript.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.jface.text.IDocument;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.jface.text.contentassist.IContextInformation;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.graphics.Point;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.resource.IEObjectDescription;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import com.google.inject.Inject;

import de.peeeq.pscript.attributes.AttrExprType;
import de.peeeq.pscript.attributes.infrastructure.AttributeManager;
import de.peeeq.pscript.pscript.Expr;
import de.peeeq.pscript.pscript.ExprIdentifier;
import de.peeeq.pscript.pscript.ExprMember;
import de.peeeq.pscript.pscript.FuncDef;
import de.peeeq.pscript.pscript.PscriptPackage;
import de.peeeq.pscript.pscript.VarDef;
import de.peeeq.pscript.scoping.PscriptScopeProvider;
import de.peeeq.pscript.types.PscriptType;
import de.peeeq.pscript.ui.contentassist.AbstractPscriptProposalProvider;

/**
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on
 * how to customize content assistant
 */
public class PscriptProposalProvider extends AbstractPscriptProposalProvider {

//	@Inject
//	PscriptScopeProvider scopeProvider;
//
//	@Inject
//	AttributeManager attrManager;
//
//	@Override
//	public void complete_ExprAtomic(EObject model, RuleCall ruleCall,
//			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//		System.out.println("model = " + model);
//		System.out.println("model.container = " + model.eContainer());
//		
//		if (model instanceof ExprMember) {
//			ExprMember m = (ExprMember) model;
//			Expr left = m.getLeft();
//			System.out.println("left = " + left);
//			if (left instanceof ExprIdentifier) {
//				ExprIdentifier ei = (ExprIdentifier) left;
//				VarDef var = ei.getNameVal();
//				System.out.println("var = " + var);
//
//			}
//			PscriptType leftType = attrManager.getAttValue(AttrExprType.class,
//					left);
//			System.out.println("leftType = " + leftType);
//			IScope scope = scopeProvider.getElementsForType(model,
//					PscriptPackage.Literals.EXPR_MEMBER__RIGHT, leftType);
//			for (IEObjectDescription x : scope.getAllElements()) {
//				System.out.println("in scope" + x.getName());
//
//				EObject obj = x.getEObjectOrProxy();
//				String proposal = x.getName().getLastSegment();
//				if (obj instanceof FuncDef) {
//					FuncDef f = (FuncDef) obj;
//					proposal = f.getName() + "(" + ")";
//				}
//				if (obj instanceof VarDef) {
//					VarDef v = (VarDef) obj;
//					proposal = v.getName();
//				}
//
//				acceptor.accept(createCompletionProposal(proposal, context));
//			}
//		}
//	}
	
	// ------

	// @Override
	// public void completeExprMember_Right(EObject model, Assignment
	// assignment, ContentAssistContext context, ICompletionProposalAcceptor
	// acceptor) {
	// ExprMember m = (ExprMember) model;
	//
	//
	// Expr left = m.getLeft();
	// System.out.println("left = " + left);
	// if (left instanceof ExprIdentifier) {
	// ExprIdentifier ei = (ExprIdentifier) left;
	// VarDef var = ei.getNameVal();
	// System.out.println("var = " + var);
	//
	// }
	// PscriptType leftType = attrManager.getAttValue(AttrExprType.class, left);
	// System.out.println("leftType = " + leftType);
	// IScope scope = scopeProvider.getElementsForType(model,
	// PscriptPackage.Literals.EXPR_MEMBER__RIGHT, leftType);
	// for (IEObjectDescription x : scope.getAllElements()) {
	// System.out.println("in scope" + x.getName());
	//
	// EObject obj = x.getEObjectOrProxy();
	// String proposal = x.getName().getLastSegment();
	// if (obj instanceof FuncDef) {
	// FuncDef f = (FuncDef) obj;
	// proposal = f.getName() + "(" + ")";
	// }
	// if (obj instanceof VarDef) {
	// VarDef v = (VarDef) obj;
	// proposal = v.getName();
	// }
	//
	// acceptor.accept(createCompletionProposal(proposal, context));
	// }
	// }

	//
	// @Override
	// public void completeExprMember_Right(EObject model, Assignment
	// assignment, ContentAssistContext context, ICompletionProposalAcceptor
	// acceptor) {
	// // System.out.println("model = " + model);
	// // System.out.println("scopeProvider = " + scopeProvider);
	// //
	// // EReference reference = PscriptPackage.Literals.EXPR_MEMBER__RIGHT;
	// //
	// // System.out.println("---------");
	// // IScope scope = scopeProvider.scope_FuncDef(model, reference);
	// // System.out.println("scope = " + scope);
	// // System.out.println("---------");
	// //
	// //
	// //
	// // for (IEObjectDescription x: scope.getAllElements()) {
	// // System.out.println("in scope" + x.getName());
	// //
	// // EObject obj = x.getEObjectOrProxy();
	// // String proposal = x.getName().getLastSegment();
	// // if (obj instanceof FuncDef) {
	// // FuncDef f = (FuncDef) obj;
	// // proposal = f.getName() +"(" + ")";
	// // }
	// // if (obj instanceof VarDef) {
	// // VarDef v = (VarDef) obj;
	// // proposal = v.getName();
	// // }
	// //
	// // acceptor.accept(createCompletionProposal(proposal , context));
	// // }
	// acceptor.accept(createCompletionProposal("completeExprMember_Right -> kill()",
	// context));
	// }
	//
	// public void complete_ExprMember(EObject model, RuleCall ruleCall,
	// ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
	// System.out.println("model = " + model);
	// System.out.println("scopeProvider = " + scopeProvider);
	//
	// EReference reference = PscriptPackage.Literals.EXPR_MEMBER__RIGHT;
	//
	// System.out.println("---------");
	// IScope scope = scopeProvider.scope_FuncDef(model, reference);
	// // IScope scope = IScope.NULLSCOPE;
	// System.out.println("scope = " + scope);
	// System.out.println("---------");
	//
	//
	//
	// for (IEObjectDescription x: scope.getAllElements()) {
	// System.out.println("in scope" + x.getName());
	//
	// EObject obj = x.getEObjectOrProxy();
	// String proposal = x.getName().getLastSegment();
	// if (obj instanceof FuncDef) {
	// FuncDef f = (FuncDef) obj;
	// proposal = f.getName() +"(" + ")";
	// }
	// if (obj instanceof VarDef) {
	// VarDef v = (VarDef) obj;
	// proposal = v.getName();
	// }
	//
	// acceptor.accept(createCompletionProposal(proposal , context));
	// }
	// acceptor.accept(createCompletionProposal("complete_ExprMember -> kill()",
	// context));
	// }
	//
	// public void complete_ExprAtomic(EObject model, RuleCall ruleCall,
	// ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
	// acceptor.accept(createCompletionProposal("complete_ExprAtomic -> kill()",
	// context));
	// }

}
